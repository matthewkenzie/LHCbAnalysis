#include "Variables_Analysis.h"

Bc2Dmunu::Variables_Analysis::Variables_Analysis(){}
Bc2Dmunu::Variables_Analysis::~Variables_Analysis(){}

// Choose variables to read in (the fewer we read the quicker the code goes)
void Bc2Dmunu::Variables_Analysis::setInputBranches(TTree *tree) {
  tree->SetBranchAddress("nPV"                                   , &nPV                                     );
  tree->SetBranchAddress("B_plus_AllIP"                          ,  B_plus_AllIP                            );
  tree->SetBranchAddress("B_plus_AllIPchi2"                      ,  B_plus_AllIPchi2                        );
  tree->SetBranchAddress("B_plus_AllDIRA"                        ,  B_plus_AllDIRA                          );
  tree->SetBranchAddress("B_plus_ENDVERTEX_X"                    , &B_plus_ENDVERTEX_X                      );
  tree->SetBranchAddress("B_plus_ENDVERTEX_Y"                    , &B_plus_ENDVERTEX_Y                      );
  tree->SetBranchAddress("B_plus_ENDVERTEX_Z"                    , &B_plus_ENDVERTEX_Z                      );
  tree->SetBranchAddress("B_plus_ENDVERTEX_XERR"                 , &B_plus_ENDVERTEX_XERR                   );
  tree->SetBranchAddress("B_plus_ENDVERTEX_YERR"                 , &B_plus_ENDVERTEX_YERR                   );
  tree->SetBranchAddress("B_plus_ENDVERTEX_ZERR"                 , &B_plus_ENDVERTEX_ZERR                   );
  tree->SetBranchAddress("B_plus_ENDVERTEX_CHI2"                 , &B_plus_ENDVERTEX_CHI2                   );
  tree->SetBranchAddress("B_plus_ENDVERTEX_NDOF"                 , &B_plus_ENDVERTEX_NDOF                   );
  tree->SetBranchAddress("B_plus_OWNPV_X"                        , &B_plus_OWNPV_X                          );
  tree->SetBranchAddress("B_plus_OWNPV_Y"                        , &B_plus_OWNPV_Y                          );
  tree->SetBranchAddress("B_plus_OWNPV_Z"                        , &B_plus_OWNPV_Z                          );
  tree->SetBranchAddress("B_plus_OWNPV_XERR"                     , &B_plus_OWNPV_XERR                       );
  tree->SetBranchAddress("B_plus_OWNPV_YERR"                     , &B_plus_OWNPV_YERR                       );
  tree->SetBranchAddress("B_plus_OWNPV_ZERR"                     , &B_plus_OWNPV_ZERR                       );
  tree->SetBranchAddress("B_plus_OWNPV_CHI2"                     , &B_plus_OWNPV_CHI2                       );
  tree->SetBranchAddress("B_plus_OWNPV_NDOF"                     , &B_plus_OWNPV_NDOF                       );
  tree->SetBranchAddress("B_plus_IP_OWNPV"                       , &B_plus_IP_OWNPV                         );
  tree->SetBranchAddress("B_plus_IPCHI2_OWNPV"                   , &B_plus_IPCHI2_OWNPV                     );
  tree->SetBranchAddress("B_plus_FD_OWNPV"                       , &B_plus_FD_OWNPV                         );
  tree->SetBranchAddress("B_plus_FDCHI2_OWNPV"                   , &B_plus_FDCHI2_OWNPV                     );
  tree->SetBranchAddress("B_plus_DIRA_OWNPV"                     , &B_plus_DIRA_OWNPV                       );
  tree->SetBranchAddress("B_plus_P"                              , &B_plus_P                                );
  tree->SetBranchAddress("B_plus_PT"                             , &B_plus_PT                               );
  tree->SetBranchAddress("B_plus_PE"                             , &B_plus_PE                               );
  tree->SetBranchAddress("B_plus_PX"                             , &B_plus_PX                               );
  tree->SetBranchAddress("B_plus_PY"                             , &B_plus_PY                               );
  tree->SetBranchAddress("B_plus_PZ"                             , &B_plus_PZ                               );
  tree->SetBranchAddress("B_plus_MM"                             , &B_plus_MM                               );
  tree->SetBranchAddress("B_plus_MMERR"                          , &B_plus_MMERR                            );
  tree->SetBranchAddress("B_plus_M"                              , &B_plus_M                                );
  tree->SetBranchAddress("B_plus_BKGCAT"                         , &B_plus_BKGCAT                           );
  tree->SetBranchAddress("B_plus_TRUEID"                         , &B_plus_TRUEID                           );
  tree->SetBranchAddress("B_plus_TRUEP_E"                        , &B_plus_TRUEP_E                          );
  tree->SetBranchAddress("B_plus_TRUEP_X"                        , &B_plus_TRUEP_X                          );
  tree->SetBranchAddress("B_plus_TRUEP_Y"                        , &B_plus_TRUEP_Y                          );
  tree->SetBranchAddress("B_plus_TRUEP_Z"                        , &B_plus_TRUEP_Z                          );
  tree->SetBranchAddress("B_plus_TRUEPT"                         , &B_plus_TRUEPT                           );
  tree->SetBranchAddress("B_plus_TRUEORIGINVERTEX_X"             , &B_plus_TRUEORIGINVERTEX_X               );
  tree->SetBranchAddress("B_plus_TRUEORIGINVERTEX_Y"             , &B_plus_TRUEORIGINVERTEX_Y               );
  tree->SetBranchAddress("B_plus_TRUEORIGINVERTEX_Z"             , &B_plus_TRUEORIGINVERTEX_Z               );
  tree->SetBranchAddress("B_plus_TRUEENDVERTEX_X"                , &B_plus_TRUEENDVERTEX_X                  );
  tree->SetBranchAddress("B_plus_TRUEENDVERTEX_Y"                , &B_plus_TRUEENDVERTEX_Y                  );
  tree->SetBranchAddress("B_plus_TRUEENDVERTEX_Z"                , &B_plus_TRUEENDVERTEX_Z                  );
  tree->SetBranchAddress("B_plus_TRUEISSTABLE"                   , &B_plus_TRUEISSTABLE                     );
  tree->SetBranchAddress("B_plus_TRUETAU"                        , &B_plus_TRUETAU                          );
  tree->SetBranchAddress("B_plus_ID"                             , &B_plus_ID                               );
  tree->SetBranchAddress("B_plus_TAU"                            , &B_plus_TAU                              );
  tree->SetBranchAddress("B_plus_TAUERR"                         , &B_plus_TAUERR                           );
  tree->SetBranchAddress("B_plus_TAUCHI2"                        , &B_plus_TAUCHI2                          );
  tree->SetBranchAddress("B_plus_BPVDIRA"                        , &B_plus_BPVDIRA                          );
  tree->SetBranchAddress("B_plus_BPVFDCHI2"                      , &B_plus_BPVFDCHI2                        );
  tree->SetBranchAddress("B_plus_BPVIPCHI2"                      , &B_plus_BPVIPCHI2                        );
  tree->SetBranchAddress("B_plus_CTAU"                           , &B_plus_CTAU                             );
  tree->SetBranchAddress("B_plus_CTAUSIGNIFICANCE"               , &B_plus_CTAUSIGNIFICANCE                 );
  tree->SetBranchAddress("B_plus_ETA"                            , &B_plus_ETA                              );
  tree->SetBranchAddress("B_plus_LTIME"                          , &B_plus_LTIME                            );
  tree->SetBranchAddress("B_plus_VCHI2"                          , &B_plus_VCHI2                            );
  tree->SetBranchAddress("B_plus_SV_X"                           , &B_plus_SV_X                             );
  tree->SetBranchAddress("B_plus_SV_Y"                           , &B_plus_SV_Y                             );
  tree->SetBranchAddress("B_plus_SV_Z"                           , &B_plus_SV_Z                             );
  tree->SetBranchAddress("B_plus_SV_CHI2"                        , &B_plus_SV_CHI2                          );
  tree->SetBranchAddress("B_plus_SV_NDOF"                        , &B_plus_SV_NDOF                          );
  tree->SetBranchAddress("B_plus_PV_X"                           , &B_plus_PV_X                             );
  tree->SetBranchAddress("B_plus_PV_Y"                           , &B_plus_PV_Y                             );
  tree->SetBranchAddress("B_plus_PV_Z"                           , &B_plus_PV_Z                             );
  tree->SetBranchAddress("B_plus_PV_CHI2"                        , &B_plus_PV_CHI2                          );
  tree->SetBranchAddress("B_plus_PV_NDOF"                        , &B_plus_PV_NDOF                          );
  tree->SetBranchAddress("B_plus_MCORR"                          , &B_plus_MCORR                            );
  tree->SetBranchAddress("B_plus_Q2ERR_LOW"                      , &B_plus_Q2ERR_LOW                        );
  tree->SetBranchAddress("B_plus_Q2ERR_HIGH"                     , &B_plus_Q2ERR_HIGH                       );
  tree->SetBranchAddress("B_plus_MCORRERR"                       , &B_plus_MCORRERR                         );
  tree->SetBranchAddress("B_plus_MCORRFULLERR"                   , &B_plus_MCORRFULLERR                     );
  tree->SetBranchAddress("B_plus_Q2SOL1"                         , &B_plus_Q2SOL1                           );
  tree->SetBranchAddress("B_plus_Q2SOL2"                         , &B_plus_Q2SOL2                           );
  tree->SetBranchAddress("D0_AllIP"                              ,  D0_AllIP                                );
  tree->SetBranchAddress("D0_AllIPchi2"                          ,  D0_AllIPchi2                            );
  tree->SetBranchAddress("D0_AllDIRA"                            ,  D0_AllDIRA                              );
  tree->SetBranchAddress("D0_ENDVERTEX_X"                        , &D0_ENDVERTEX_X                          );
  tree->SetBranchAddress("D0_ENDVERTEX_Y"                        , &D0_ENDVERTEX_Y                          );
  tree->SetBranchAddress("D0_ENDVERTEX_Z"                        , &D0_ENDVERTEX_Z                          );
  tree->SetBranchAddress("D0_ENDVERTEX_XERR"                     , &D0_ENDVERTEX_XERR                       );
  tree->SetBranchAddress("D0_ENDVERTEX_YERR"                     , &D0_ENDVERTEX_YERR                       );
  tree->SetBranchAddress("D0_ENDVERTEX_ZERR"                     , &D0_ENDVERTEX_ZERR                       );
  tree->SetBranchAddress("D0_ENDVERTEX_CHI2"                     , &D0_ENDVERTEX_CHI2                       );
  tree->SetBranchAddress("D0_ENDVERTEX_NDOF"                     , &D0_ENDVERTEX_NDOF                       );
  tree->SetBranchAddress("D0_OWNPV_X"                            , &D0_OWNPV_X                              );
  tree->SetBranchAddress("D0_OWNPV_Y"                            , &D0_OWNPV_Y                              );
  tree->SetBranchAddress("D0_OWNPV_Z"                            , &D0_OWNPV_Z                              );
  tree->SetBranchAddress("D0_OWNPV_XERR"                         , &D0_OWNPV_XERR                           );
  tree->SetBranchAddress("D0_OWNPV_YERR"                         , &D0_OWNPV_YERR                           );
  tree->SetBranchAddress("D0_OWNPV_ZERR"                         , &D0_OWNPV_ZERR                           );
  tree->SetBranchAddress("D0_OWNPV_CHI2"                         , &D0_OWNPV_CHI2                           );
  tree->SetBranchAddress("D0_OWNPV_NDOF"                         , &D0_OWNPV_NDOF                           );
  tree->SetBranchAddress("D0_IP_OWNPV"                           , &D0_IP_OWNPV                             );
  tree->SetBranchAddress("D0_IPCHI2_OWNPV"                       , &D0_IPCHI2_OWNPV                         );
  tree->SetBranchAddress("D0_FD_OWNPV"                           , &D0_FD_OWNPV                             );
  tree->SetBranchAddress("D0_FDCHI2_OWNPV"                       , &D0_FDCHI2_OWNPV                         );
  tree->SetBranchAddress("D0_DIRA_OWNPV"                         , &D0_DIRA_OWNPV                           );
  tree->SetBranchAddress("D0_ORIVX_X"                            , &D0_ORIVX_X                              );
  tree->SetBranchAddress("D0_ORIVX_Y"                            , &D0_ORIVX_Y                              );
  tree->SetBranchAddress("D0_ORIVX_Z"                            , &D0_ORIVX_Z                              );
  tree->SetBranchAddress("D0_ORIVX_XERR"                         , &D0_ORIVX_XERR                           );
  tree->SetBranchAddress("D0_ORIVX_YERR"                         , &D0_ORIVX_YERR                           );
  tree->SetBranchAddress("D0_ORIVX_ZERR"                         , &D0_ORIVX_ZERR                           );
  tree->SetBranchAddress("D0_ORIVX_CHI2"                         , &D0_ORIVX_CHI2                           );
  tree->SetBranchAddress("D0_ORIVX_NDOF"                         , &D0_ORIVX_NDOF                           );
  tree->SetBranchAddress("D0_FD_ORIVX"                           , &D0_FD_ORIVX                             );
  tree->SetBranchAddress("D0_FDCHI2_ORIVX"                       , &D0_FDCHI2_ORIVX                         );
  tree->SetBranchAddress("D0_DIRA_ORIVX"                         , &D0_DIRA_ORIVX                           );
  tree->SetBranchAddress("D0_P"                                  , &D0_P                                    );
  tree->SetBranchAddress("D0_PT"                                 , &D0_PT                                   );
  tree->SetBranchAddress("D0_PE"                                 , &D0_PE                                   );
  tree->SetBranchAddress("D0_PX"                                 , &D0_PX                                   );
  tree->SetBranchAddress("D0_PY"                                 , &D0_PY                                   );
  tree->SetBranchAddress("D0_PZ"                                 , &D0_PZ                                   );
  tree->SetBranchAddress("D0_MM"                                 , &D0_MM                                   );
  tree->SetBranchAddress("D0_MMERR"                              , &D0_MMERR                                );
  tree->SetBranchAddress("D0_M"                                  , &D0_M                                    );
  tree->SetBranchAddress("D0_BKGCAT"                             , &D0_BKGCAT                               );
  tree->SetBranchAddress("D0_TRUEID"                             , &D0_TRUEID                               );
  tree->SetBranchAddress("D0_TRUEP_E"                            , &D0_TRUEP_E                              );
  tree->SetBranchAddress("D0_TRUEP_X"                            , &D0_TRUEP_X                              );
  tree->SetBranchAddress("D0_TRUEP_Y"                            , &D0_TRUEP_Y                              );
  tree->SetBranchAddress("D0_TRUEP_Z"                            , &D0_TRUEP_Z                              );
  tree->SetBranchAddress("D0_TRUEPT"                             , &D0_TRUEPT                               );
  tree->SetBranchAddress("D0_TRUEORIGINVERTEX_X"                 , &D0_TRUEORIGINVERTEX_X                   );
  tree->SetBranchAddress("D0_TRUEORIGINVERTEX_Y"                 , &D0_TRUEORIGINVERTEX_Y                   );
  tree->SetBranchAddress("D0_TRUEORIGINVERTEX_Z"                 , &D0_TRUEORIGINVERTEX_Z                   );
  tree->SetBranchAddress("D0_TRUEENDVERTEX_X"                    , &D0_TRUEENDVERTEX_X                      );
  tree->SetBranchAddress("D0_TRUEENDVERTEX_Y"                    , &D0_TRUEENDVERTEX_Y                      );
  tree->SetBranchAddress("D0_TRUEENDVERTEX_Z"                    , &D0_TRUEENDVERTEX_Z                      );
  tree->SetBranchAddress("D0_TRUEISSTABLE"                       , &D0_TRUEISSTABLE                         );
  tree->SetBranchAddress("D0_TRUETAU"                            , &D0_TRUETAU                              );
  tree->SetBranchAddress("D0_ID"                                 , &D0_ID                                   );
  tree->SetBranchAddress("D0_TAU"                                , &D0_TAU                                  );
  tree->SetBranchAddress("D0_TAUERR"                             , &D0_TAUERR                               );
  tree->SetBranchAddress("D0_TAUCHI2"                            , &D0_TAUCHI2                              );
  tree->SetBranchAddress("D0_CTAU"                               , &D0_CTAU                                 );
  tree->SetBranchAddress("D0_CTAUSIGNIFICANCE"                   , &D0_CTAUSIGNIFICANCE                     );
  tree->SetBranchAddress("K_minus_MC12TuneV2_ProbNNe"            , &K_minus_MC12TuneV2_ProbNNe              );
  tree->SetBranchAddress("K_minus_MC12TuneV2_ProbNNmu"           , &K_minus_MC12TuneV2_ProbNNmu             );
  tree->SetBranchAddress("K_minus_MC12TuneV2_ProbNNpi"           , &K_minus_MC12TuneV2_ProbNNpi             );
  tree->SetBranchAddress("K_minus_MC12TuneV2_ProbNNk"            , &K_minus_MC12TuneV2_ProbNNk              );
  tree->SetBranchAddress("K_minus_MC12TuneV2_ProbNNp"            , &K_minus_MC12TuneV2_ProbNNp              );
  tree->SetBranchAddress("K_minus_MC12TuneV2_ProbNNghost"        , &K_minus_MC12TuneV2_ProbNNghost          );
  tree->SetBranchAddress("K_minus_MC12TuneV3_ProbNNe"            , &K_minus_MC12TuneV3_ProbNNe              );
  tree->SetBranchAddress("K_minus_MC12TuneV3_ProbNNmu"           , &K_minus_MC12TuneV3_ProbNNmu             );
  tree->SetBranchAddress("K_minus_MC12TuneV3_ProbNNpi"           , &K_minus_MC12TuneV3_ProbNNpi             );
  tree->SetBranchAddress("K_minus_MC12TuneV3_ProbNNk"            , &K_minus_MC12TuneV3_ProbNNk              );
  tree->SetBranchAddress("K_minus_MC12TuneV3_ProbNNp"            , &K_minus_MC12TuneV3_ProbNNp              );
  tree->SetBranchAddress("K_minus_MC12TuneV3_ProbNNghost"        , &K_minus_MC12TuneV3_ProbNNghost          );
  tree->SetBranchAddress("K_minus_AllIP"                         ,  K_minus_AllIP                           );
  tree->SetBranchAddress("K_minus_AllIPchi2"                     ,  K_minus_AllIPchi2                       );
  tree->SetBranchAddress("K_minus_OWNPV_X"                       , &K_minus_OWNPV_X                         );
  tree->SetBranchAddress("K_minus_OWNPV_Y"                       , &K_minus_OWNPV_Y                         );
  tree->SetBranchAddress("K_minus_OWNPV_Z"                       , &K_minus_OWNPV_Z                         );
  tree->SetBranchAddress("K_minus_OWNPV_XERR"                    , &K_minus_OWNPV_XERR                      );
  tree->SetBranchAddress("K_minus_OWNPV_YERR"                    , &K_minus_OWNPV_YERR                      );
  tree->SetBranchAddress("K_minus_OWNPV_ZERR"                    , &K_minus_OWNPV_ZERR                      );
  tree->SetBranchAddress("K_minus_OWNPV_CHI2"                    , &K_minus_OWNPV_CHI2                      );
  tree->SetBranchAddress("K_minus_OWNPV_NDOF"                    , &K_minus_OWNPV_NDOF                      );
  tree->SetBranchAddress("K_minus_IP_OWNPV"                      , &K_minus_IP_OWNPV                        );
  tree->SetBranchAddress("K_minus_IPCHI2_OWNPV"                  , &K_minus_IPCHI2_OWNPV                    );
  tree->SetBranchAddress("K_minus_ORIVX_X"                       , &K_minus_ORIVX_X                         );
  tree->SetBranchAddress("K_minus_ORIVX_Y"                       , &K_minus_ORIVX_Y                         );
  tree->SetBranchAddress("K_minus_ORIVX_Z"                       , &K_minus_ORIVX_Z                         );
  tree->SetBranchAddress("K_minus_ORIVX_XERR"                    , &K_minus_ORIVX_XERR                      );
  tree->SetBranchAddress("K_minus_ORIVX_YERR"                    , &K_minus_ORIVX_YERR                      );
  tree->SetBranchAddress("K_minus_ORIVX_ZERR"                    , &K_minus_ORIVX_ZERR                      );
  tree->SetBranchAddress("K_minus_ORIVX_CHI2"                    , &K_minus_ORIVX_CHI2                      );
  tree->SetBranchAddress("K_minus_ORIVX_NDOF"                    , &K_minus_ORIVX_NDOF                      );
  tree->SetBranchAddress("K_minus_P"                             , &K_minus_P                               );
  tree->SetBranchAddress("K_minus_PT"                            , &K_minus_PT                              );
  tree->SetBranchAddress("K_minus_PE"                            , &K_minus_PE                              );
  tree->SetBranchAddress("K_minus_PX"                            , &K_minus_PX                              );
  tree->SetBranchAddress("K_minus_PY"                            , &K_minus_PY                              );
  tree->SetBranchAddress("K_minus_PZ"                            , &K_minus_PZ                              );
  tree->SetBranchAddress("K_minus_M"                             , &K_minus_M                               );
  tree->SetBranchAddress("K_minus_ID"                            , &K_minus_ID                              );
  tree->SetBranchAddress("K_minus_PIDe"                          , &K_minus_PIDe                            );
  tree->SetBranchAddress("K_minus_PIDmu"                         , &K_minus_PIDmu                           );
  tree->SetBranchAddress("K_minus_PIDK"                          , &K_minus_PIDK                            );
  tree->SetBranchAddress("K_minus_PIDp"                          , &K_minus_PIDp                            );
  tree->SetBranchAddress("K_minus_ProbNNe"                       , &K_minus_ProbNNe                         );
  tree->SetBranchAddress("K_minus_ProbNNk"                       , &K_minus_ProbNNk                         );
  tree->SetBranchAddress("K_minus_ProbNNp"                       , &K_minus_ProbNNp                         );
  tree->SetBranchAddress("K_minus_ProbNNpi"                      , &K_minus_ProbNNpi                        );
  tree->SetBranchAddress("K_minus_ProbNNmu"                      , &K_minus_ProbNNmu                        );
  tree->SetBranchAddress("K_minus_ProbNNghost"                   , &K_minus_ProbNNghost                     );
  tree->SetBranchAddress("K_minus_hasMuon"                       , &K_minus_hasMuon                         );
  tree->SetBranchAddress("K_minus_isMuon"                        , &K_minus_isMuon                          );
  tree->SetBranchAddress("K_minus_hasRich"                       , &K_minus_hasRich                         );
  tree->SetBranchAddress("K_minus_hasCalo"                       , &K_minus_hasCalo                         );
  tree->SetBranchAddress("K_minus_TRACK_Type"                    , &K_minus_TRACK_Type                      );
  tree->SetBranchAddress("K_minus_TRACK_Key"                     , &K_minus_TRACK_Key                       );
  tree->SetBranchAddress("K_minus_TRACK_CHI2"                    , &K_minus_TRACK_CHI2                      );
  tree->SetBranchAddress("K_minus_TRACK_NDOF"                    , &K_minus_TRACK_NDOF                      );
  tree->SetBranchAddress("K_minus_TRACK_CHI2NDOF"                , &K_minus_TRACK_CHI2NDOF                  );
  tree->SetBranchAddress("K_minus_TRACK_PCHI2"                   , &K_minus_TRACK_PCHI2                     );
  tree->SetBranchAddress("K_minus_TRACK_VeloCHI2NDOF"            , &K_minus_TRACK_VeloCHI2NDOF              );
  tree->SetBranchAddress("K_minus_TRACK_TCHI2NDOF"               , &K_minus_TRACK_TCHI2NDOF                 );
  tree->SetBranchAddress("K_minus_TRACK_FirstMeasurementX"       , &K_minus_TRACK_FirstMeasurementX         );
  tree->SetBranchAddress("K_minus_TRACK_FirstMeasurementY"       , &K_minus_TRACK_FirstMeasurementY         );
  tree->SetBranchAddress("K_minus_TRACK_FirstMeasurementZ"       , &K_minus_TRACK_FirstMeasurementZ         );
  tree->SetBranchAddress("K_minus_TRACK_MatchCHI2"               , &K_minus_TRACK_MatchCHI2                 );
  tree->SetBranchAddress("K_minus_TRACK_GhostProb"               , &K_minus_TRACK_GhostProb                 );
  tree->SetBranchAddress("K_minus_TRACK_CloneDist"               , &K_minus_TRACK_CloneDist                 );
  tree->SetBranchAddress("K_minus_TRACK_Likelihood"              , &K_minus_TRACK_Likelihood                );
  tree->SetBranchAddress("K_minus_ETA"                           , &K_minus_ETA                             );
  tree->SetBranchAddress("K_minus_MIPCHI2PV"                     , &K_minus_MIPCHI2PV                       );
  tree->SetBranchAddress("K_minus_TRCHI2DOF"                     , &K_minus_TRCHI2DOF                       );
  tree->SetBranchAddress("K_minus_TRGHOSTPROB"                   , &K_minus_TRGHOSTPROB                     );
  tree->SetBranchAddress("Pi_plus_MC12TuneV2_ProbNNe"            , &Pi_plus_MC12TuneV2_ProbNNe              );
  tree->SetBranchAddress("Pi_plus_MC12TuneV2_ProbNNmu"           , &Pi_plus_MC12TuneV2_ProbNNmu             );
  tree->SetBranchAddress("Pi_plus_MC12TuneV2_ProbNNpi"           , &Pi_plus_MC12TuneV2_ProbNNpi             );
  tree->SetBranchAddress("Pi_plus_MC12TuneV2_ProbNNk"            , &Pi_plus_MC12TuneV2_ProbNNk              );
  tree->SetBranchAddress("Pi_plus_MC12TuneV2_ProbNNp"            , &Pi_plus_MC12TuneV2_ProbNNp              );
  tree->SetBranchAddress("Pi_plus_MC12TuneV2_ProbNNghost"        , &Pi_plus_MC12TuneV2_ProbNNghost          );
  tree->SetBranchAddress("Pi_plus_MC12TuneV3_ProbNNe"            , &Pi_plus_MC12TuneV3_ProbNNe              );
  tree->SetBranchAddress("Pi_plus_MC12TuneV3_ProbNNmu"           , &Pi_plus_MC12TuneV3_ProbNNmu             );
  tree->SetBranchAddress("Pi_plus_MC12TuneV3_ProbNNpi"           , &Pi_plus_MC12TuneV3_ProbNNpi             );
  tree->SetBranchAddress("Pi_plus_MC12TuneV3_ProbNNk"            , &Pi_plus_MC12TuneV3_ProbNNk              );
  tree->SetBranchAddress("Pi_plus_MC12TuneV3_ProbNNp"            , &Pi_plus_MC12TuneV3_ProbNNp              );
  tree->SetBranchAddress("Pi_plus_MC12TuneV3_ProbNNghost"        , &Pi_plus_MC12TuneV3_ProbNNghost          );
  tree->SetBranchAddress("Pi_plus_AllIP"                         ,  Pi_plus_AllIP                           );
  tree->SetBranchAddress("Pi_plus_AllIPchi2"                     ,  Pi_plus_AllIPchi2                       );
  tree->SetBranchAddress("Pi_plus_OWNPV_X"                       , &Pi_plus_OWNPV_X                         );
  tree->SetBranchAddress("Pi_plus_OWNPV_Y"                       , &Pi_plus_OWNPV_Y                         );
  tree->SetBranchAddress("Pi_plus_OWNPV_Z"                       , &Pi_plus_OWNPV_Z                         );
  tree->SetBranchAddress("Pi_plus_OWNPV_XERR"                    , &Pi_plus_OWNPV_XERR                      );
  tree->SetBranchAddress("Pi_plus_OWNPV_YERR"                    , &Pi_plus_OWNPV_YERR                      );
  tree->SetBranchAddress("Pi_plus_OWNPV_ZERR"                    , &Pi_plus_OWNPV_ZERR                      );
  tree->SetBranchAddress("Pi_plus_OWNPV_CHI2"                    , &Pi_plus_OWNPV_CHI2                      );
  tree->SetBranchAddress("Pi_plus_OWNPV_NDOF"                    , &Pi_plus_OWNPV_NDOF                      );
  tree->SetBranchAddress("Pi_plus_IP_OWNPV"                      , &Pi_plus_IP_OWNPV                        );
  tree->SetBranchAddress("Pi_plus_IPCHI2_OWNPV"                  , &Pi_plus_IPCHI2_OWNPV                    );
  tree->SetBranchAddress("Pi_plus_ORIVX_X"                       , &Pi_plus_ORIVX_X                         );
  tree->SetBranchAddress("Pi_plus_ORIVX_Y"                       , &Pi_plus_ORIVX_Y                         );
  tree->SetBranchAddress("Pi_plus_ORIVX_Z"                       , &Pi_plus_ORIVX_Z                         );
  tree->SetBranchAddress("Pi_plus_ORIVX_XERR"                    , &Pi_plus_ORIVX_XERR                      );
  tree->SetBranchAddress("Pi_plus_ORIVX_YERR"                    , &Pi_plus_ORIVX_YERR                      );
  tree->SetBranchAddress("Pi_plus_ORIVX_ZERR"                    , &Pi_plus_ORIVX_ZERR                      );
  tree->SetBranchAddress("Pi_plus_ORIVX_CHI2"                    , &Pi_plus_ORIVX_CHI2                      );
  tree->SetBranchAddress("Pi_plus_ORIVX_NDOF"                    , &Pi_plus_ORIVX_NDOF                      );
  tree->SetBranchAddress("Pi_plus_P"                             , &Pi_plus_P                               );
  tree->SetBranchAddress("Pi_plus_PT"                            , &Pi_plus_PT                              );
  tree->SetBranchAddress("Pi_plus_PE"                            , &Pi_plus_PE                              );
  tree->SetBranchAddress("Pi_plus_PX"                            , &Pi_plus_PX                              );
  tree->SetBranchAddress("Pi_plus_PY"                            , &Pi_plus_PY                              );
  tree->SetBranchAddress("Pi_plus_PZ"                            , &Pi_plus_PZ                              );
  tree->SetBranchAddress("Pi_plus_M"                             , &Pi_plus_M                               );
  tree->SetBranchAddress("Pi_plus_ID"                            , &Pi_plus_ID                              );
  tree->SetBranchAddress("Pi_plus_PIDe"                          , &Pi_plus_PIDe                            );
  tree->SetBranchAddress("Pi_plus_PIDmu"                         , &Pi_plus_PIDmu                           );
  tree->SetBranchAddress("Pi_plus_PIDK"                          , &Pi_plus_PIDK                            );
  tree->SetBranchAddress("Pi_plus_PIDp"                          , &Pi_plus_PIDp                            );
  tree->SetBranchAddress("Pi_plus_ProbNNe"                       , &Pi_plus_ProbNNe                         );
  tree->SetBranchAddress("Pi_plus_ProbNNk"                       , &Pi_plus_ProbNNk                         );
  tree->SetBranchAddress("Pi_plus_ProbNNp"                       , &Pi_plus_ProbNNp                         );
  tree->SetBranchAddress("Pi_plus_ProbNNpi"                      , &Pi_plus_ProbNNpi                        );
  tree->SetBranchAddress("Pi_plus_ProbNNmu"                      , &Pi_plus_ProbNNmu                        );
  tree->SetBranchAddress("Pi_plus_ProbNNghost"                   , &Pi_plus_ProbNNghost                     );
  tree->SetBranchAddress("Pi_plus_hasMuon"                       , &Pi_plus_hasMuon                         );
  tree->SetBranchAddress("Pi_plus_isMuon"                        , &Pi_plus_isMuon                          );
  tree->SetBranchAddress("Pi_plus_hasRich"                       , &Pi_plus_hasRich                         );
  tree->SetBranchAddress("Pi_plus_hasCalo"                       , &Pi_plus_hasCalo                         );
  tree->SetBranchAddress("Pi_plus_TRACK_Type"                    , &Pi_plus_TRACK_Type                      );
  tree->SetBranchAddress("Pi_plus_TRACK_Key"                     , &Pi_plus_TRACK_Key                       );
  tree->SetBranchAddress("Pi_plus_TRACK_CHI2"                    , &Pi_plus_TRACK_CHI2                      );
  tree->SetBranchAddress("Pi_plus_TRACK_NDOF"                    , &Pi_plus_TRACK_NDOF                      );
  tree->SetBranchAddress("Pi_plus_TRACK_CHI2NDOF"                , &Pi_plus_TRACK_CHI2NDOF                  );
  tree->SetBranchAddress("Pi_plus_TRACK_PCHI2"                   , &Pi_plus_TRACK_PCHI2                     );
  tree->SetBranchAddress("Pi_plus_TRACK_VeloCHI2NDOF"            , &Pi_plus_TRACK_VeloCHI2NDOF              );
  tree->SetBranchAddress("Pi_plus_TRACK_TCHI2NDOF"               , &Pi_plus_TRACK_TCHI2NDOF                 );
  tree->SetBranchAddress("Pi_plus_TRACK_FirstMeasurementX"       , &Pi_plus_TRACK_FirstMeasurementX         );
  tree->SetBranchAddress("Pi_plus_TRACK_FirstMeasurementY"       , &Pi_plus_TRACK_FirstMeasurementY         );
  tree->SetBranchAddress("Pi_plus_TRACK_FirstMeasurementZ"       , &Pi_plus_TRACK_FirstMeasurementZ         );
  tree->SetBranchAddress("Pi_plus_TRACK_MatchCHI2"               , &Pi_plus_TRACK_MatchCHI2                 );
  tree->SetBranchAddress("Pi_plus_TRACK_GhostProb"               , &Pi_plus_TRACK_GhostProb                 );
  tree->SetBranchAddress("Pi_plus_TRACK_CloneDist"               , &Pi_plus_TRACK_CloneDist                 );
  tree->SetBranchAddress("Pi_plus_TRACK_Likelihood"              , &Pi_plus_TRACK_Likelihood                );
  tree->SetBranchAddress("Pi_plus_ETA"                           , &Pi_plus_ETA                             );
  tree->SetBranchAddress("Pi_plus_MIPCHI2PV"                     , &Pi_plus_MIPCHI2PV                       );
  tree->SetBranchAddress("Pi_plus_TRCHI2DOF"                     , &Pi_plus_TRCHI2DOF                       );
  tree->SetBranchAddress("Pi_plus_TRGHOSTPROB"                   , &Pi_plus_TRGHOSTPROB                     );
  tree->SetBranchAddress("Mu_plus_MC12TuneV2_ProbNNe"            , &Mu_plus_MC12TuneV2_ProbNNe              );
  tree->SetBranchAddress("Mu_plus_MC12TuneV2_ProbNNmu"           , &Mu_plus_MC12TuneV2_ProbNNmu             );
  tree->SetBranchAddress("Mu_plus_MC12TuneV2_ProbNNpi"           , &Mu_plus_MC12TuneV2_ProbNNpi             );
  tree->SetBranchAddress("Mu_plus_MC12TuneV2_ProbNNk"            , &Mu_plus_MC12TuneV2_ProbNNk              );
  tree->SetBranchAddress("Mu_plus_MC12TuneV2_ProbNNp"            , &Mu_plus_MC12TuneV2_ProbNNp              );
  tree->SetBranchAddress("Mu_plus_MC12TuneV2_ProbNNghost"        , &Mu_plus_MC12TuneV2_ProbNNghost          );
  tree->SetBranchAddress("Mu_plus_MC12TuneV3_ProbNNe"            , &Mu_plus_MC12TuneV3_ProbNNe              );
  tree->SetBranchAddress("Mu_plus_MC12TuneV3_ProbNNmu"           , &Mu_plus_MC12TuneV3_ProbNNmu             );
  tree->SetBranchAddress("Mu_plus_MC12TuneV3_ProbNNpi"           , &Mu_plus_MC12TuneV3_ProbNNpi             );
  tree->SetBranchAddress("Mu_plus_MC12TuneV3_ProbNNk"            , &Mu_plus_MC12TuneV3_ProbNNk              );
  tree->SetBranchAddress("Mu_plus_MC12TuneV3_ProbNNp"            , &Mu_plus_MC12TuneV3_ProbNNp              );
  tree->SetBranchAddress("Mu_plus_MC12TuneV3_ProbNNghost"        , &Mu_plus_MC12TuneV3_ProbNNghost          );
  tree->SetBranchAddress("Mu_plus_AllIP"                         ,  Mu_plus_AllIP                           );
  tree->SetBranchAddress("Mu_plus_AllIPchi2"                     ,  Mu_plus_AllIPchi2                       );
  tree->SetBranchAddress("Mu_plus_OWNPV_X"                       , &Mu_plus_OWNPV_X                         );
  tree->SetBranchAddress("Mu_plus_OWNPV_Y"                       , &Mu_plus_OWNPV_Y                         );
  tree->SetBranchAddress("Mu_plus_OWNPV_Z"                       , &Mu_plus_OWNPV_Z                         );
  tree->SetBranchAddress("Mu_plus_OWNPV_XERR"                    , &Mu_plus_OWNPV_XERR                      );
  tree->SetBranchAddress("Mu_plus_OWNPV_YERR"                    , &Mu_plus_OWNPV_YERR                      );
  tree->SetBranchAddress("Mu_plus_OWNPV_ZERR"                    , &Mu_plus_OWNPV_ZERR                      );
  tree->SetBranchAddress("Mu_plus_OWNPV_CHI2"                    , &Mu_plus_OWNPV_CHI2                      );
  tree->SetBranchAddress("Mu_plus_OWNPV_NDOF"                    , &Mu_plus_OWNPV_NDOF                      );
  tree->SetBranchAddress("Mu_plus_IP_OWNPV"                      , &Mu_plus_IP_OWNPV                        );
  tree->SetBranchAddress("Mu_plus_IPCHI2_OWNPV"                  , &Mu_plus_IPCHI2_OWNPV                    );
  tree->SetBranchAddress("Mu_plus_ORIVX_X"                       , &Mu_plus_ORIVX_X                         );
  tree->SetBranchAddress("Mu_plus_ORIVX_Y"                       , &Mu_plus_ORIVX_Y                         );
  tree->SetBranchAddress("Mu_plus_ORIVX_Z"                       , &Mu_plus_ORIVX_Z                         );
  tree->SetBranchAddress("Mu_plus_ORIVX_XERR"                    , &Mu_plus_ORIVX_XERR                      );
  tree->SetBranchAddress("Mu_plus_ORIVX_YERR"                    , &Mu_plus_ORIVX_YERR                      );
  tree->SetBranchAddress("Mu_plus_ORIVX_ZERR"                    , &Mu_plus_ORIVX_ZERR                      );
  tree->SetBranchAddress("Mu_plus_ORIVX_CHI2"                    , &Mu_plus_ORIVX_CHI2                      );
  tree->SetBranchAddress("Mu_plus_ORIVX_NDOF"                    , &Mu_plus_ORIVX_NDOF                      );
  tree->SetBranchAddress("Mu_plus_P"                             , &Mu_plus_P                               );
  tree->SetBranchAddress("Mu_plus_PT"                            , &Mu_plus_PT                              );
  tree->SetBranchAddress("Mu_plus_PE"                            , &Mu_plus_PE                              );
  tree->SetBranchAddress("Mu_plus_PX"                            , &Mu_plus_PX                              );
  tree->SetBranchAddress("Mu_plus_PY"                            , &Mu_plus_PY                              );
  tree->SetBranchAddress("Mu_plus_PZ"                            , &Mu_plus_PZ                              );
  tree->SetBranchAddress("Mu_plus_M"                             , &Mu_plus_M                               );
  tree->SetBranchAddress("Mu_plus_ID"                            , &Mu_plus_ID                              );
  tree->SetBranchAddress("Mu_plus_PIDe"                          , &Mu_plus_PIDe                            );
  tree->SetBranchAddress("Mu_plus_PIDmu"                         , &Mu_plus_PIDmu                           );
  tree->SetBranchAddress("Mu_plus_PIDK"                          , &Mu_plus_PIDK                            );
  tree->SetBranchAddress("Mu_plus_PIDp"                          , &Mu_plus_PIDp                            );
  tree->SetBranchAddress("Mu_plus_ProbNNe"                       , &Mu_plus_ProbNNe                         );
  tree->SetBranchAddress("Mu_plus_ProbNNk"                       , &Mu_plus_ProbNNk                         );
  tree->SetBranchAddress("Mu_plus_ProbNNp"                       , &Mu_plus_ProbNNp                         );
  tree->SetBranchAddress("Mu_plus_ProbNNpi"                      , &Mu_plus_ProbNNpi                        );
  tree->SetBranchAddress("Mu_plus_ProbNNmu"                      , &Mu_plus_ProbNNmu                        );
  tree->SetBranchAddress("Mu_plus_ProbNNghost"                   , &Mu_plus_ProbNNghost                     );
  tree->SetBranchAddress("Mu_plus_hasMuon"                       , &Mu_plus_hasMuon                         );
  tree->SetBranchAddress("Mu_plus_isMuon"                        , &Mu_plus_isMuon                          );
  tree->SetBranchAddress("Mu_plus_hasRich"                       , &Mu_plus_hasRich                         );
  tree->SetBranchAddress("Mu_plus_hasCalo"                       , &Mu_plus_hasCalo                         );
  tree->SetBranchAddress("Mu_plus_TRACK_Type"                    , &Mu_plus_TRACK_Type                      );
  tree->SetBranchAddress("Mu_plus_TRACK_Key"                     , &Mu_plus_TRACK_Key                       );
  tree->SetBranchAddress("Mu_plus_TRACK_CHI2"                    , &Mu_plus_TRACK_CHI2                      );
  tree->SetBranchAddress("Mu_plus_TRACK_NDOF"                    , &Mu_plus_TRACK_NDOF                      );
  tree->SetBranchAddress("Mu_plus_TRACK_CHI2NDOF"                , &Mu_plus_TRACK_CHI2NDOF                  );
  tree->SetBranchAddress("Mu_plus_TRACK_PCHI2"                   , &Mu_plus_TRACK_PCHI2                     );
  tree->SetBranchAddress("Mu_plus_TRACK_VeloCHI2NDOF"            , &Mu_plus_TRACK_VeloCHI2NDOF              );
  tree->SetBranchAddress("Mu_plus_TRACK_TCHI2NDOF"               , &Mu_plus_TRACK_TCHI2NDOF                 );
  tree->SetBranchAddress("Mu_plus_TRACK_FirstMeasurementX"       , &Mu_plus_TRACK_FirstMeasurementX         );
  tree->SetBranchAddress("Mu_plus_TRACK_FirstMeasurementY"       , &Mu_plus_TRACK_FirstMeasurementY         );
  tree->SetBranchAddress("Mu_plus_TRACK_FirstMeasurementZ"       , &Mu_plus_TRACK_FirstMeasurementZ         );
  tree->SetBranchAddress("Mu_plus_TRACK_MatchCHI2"               , &Mu_plus_TRACK_MatchCHI2                 );
  tree->SetBranchAddress("Mu_plus_TRACK_GhostProb"               , &Mu_plus_TRACK_GhostProb                 );
  tree->SetBranchAddress("Mu_plus_TRACK_CloneDist"               , &Mu_plus_TRACK_CloneDist                 );
  tree->SetBranchAddress("Mu_plus_TRACK_Likelihood"              , &Mu_plus_TRACK_Likelihood                );
  tree->SetBranchAddress("Mu_plus_ETA"                           , &Mu_plus_ETA                             );
  tree->SetBranchAddress("Mu_plus_MIPCHI2PV"                     , &Mu_plus_MIPCHI2PV                       );
  tree->SetBranchAddress("Mu_plus_TRCHI2DOF"                     , &Mu_plus_TRCHI2DOF                       );
  tree->SetBranchAddress("Mu_plus_TRGHOSTPROB"                   , &Mu_plus_TRGHOSTPROB                     );
  tree->SetBranchAddress("nCandidate"                            , &nCandidate                              );
  tree->SetBranchAddress("totCandidates"                         , &totCandidates                           );
  tree->SetBranchAddress("EventInSequence"                       , &EventInSequence                         );
  tree->SetBranchAddress("runNumber"                             , &runNumber                               );
  tree->SetBranchAddress("eventNumber"                           , &eventNumber                             );
  tree->SetBranchAddress("BCID"                                  , &BCID                                    );
  tree->SetBranchAddress("BCType"                                , &BCType                                  );
  tree->SetBranchAddress("OdinTCK"                               , &OdinTCK                                 );
  tree->SetBranchAddress("L0DUTCK"                               , &L0DUTCK                                 );
  tree->SetBranchAddress("HLT1TCK"                               , &HLT1TCK                                 );
  tree->SetBranchAddress("HLT2TCK"                               , &HLT2TCK                                 );
  tree->SetBranchAddress("GpsTime"                               , &GpsTime                                 );
  tree->SetBranchAddress("Polarity"                              , &Polarity                                );
  tree->SetBranchAddress("PVX"                                   ,  PVX                                     );
  tree->SetBranchAddress("PVY"                                   ,  PVY                                     );
  tree->SetBranchAddress("PVZ"                                   ,  PVZ                                     );
  tree->SetBranchAddress("PVXERR"                                ,  PVXERR                                  );
  tree->SetBranchAddress("PVYERR"                                ,  PVYERR                                  );
  tree->SetBranchAddress("PVZERR"                                ,  PVZERR                                  );
  tree->SetBranchAddress("PVCHI2"                                ,  PVCHI2                                  );
  tree->SetBranchAddress("PVNDOF"                                ,  PVNDOF                                  );
  tree->SetBranchAddress("PVNTRACKS"                             ,  PVNTRACKS                               );
  tree->SetBranchAddress("nPVs"                                  , &nPVs                                    );
  tree->SetBranchAddress("nTracks"                               , &nTracks                                 );
  tree->SetBranchAddress("nLongTracks"                           , &nLongTracks                             );
  tree->SetBranchAddress("nDownstreamTracks"                     , &nDownstreamTracks                       );
  tree->SetBranchAddress("nUpstreamTracks"                       , &nUpstreamTracks                         );
  tree->SetBranchAddress("nVeloTracks"                           , &nVeloTracks                             );
  tree->SetBranchAddress("nTTracks"                              , &nTTracks                                );
  tree->SetBranchAddress("nBackTracks"                           , &nBackTracks                             );
  tree->SetBranchAddress("nRich1Hits"                            , &nRich1Hits                              );
  tree->SetBranchAddress("nRich2Hits"                            , &nRich2Hits                              );
  tree->SetBranchAddress("nVeloClusters"                         , &nVeloClusters                           );
  tree->SetBranchAddress("nITClusters"                           , &nITClusters                             );
  tree->SetBranchAddress("nTTClusters"                           , &nTTClusters                             );
  tree->SetBranchAddress("nOTClusters"                           , &nOTClusters                             );
  tree->SetBranchAddress("nSPDHits"                              , &nSPDHits                                );
  tree->SetBranchAddress("nMuonCoordsS0"                         , &nMuonCoordsS0                           );
  tree->SetBranchAddress("nMuonCoordsS1"                         , &nMuonCoordsS1                           );
  tree->SetBranchAddress("nMuonCoordsS2"                         , &nMuonCoordsS2                           );
  tree->SetBranchAddress("nMuonCoordsS3"                         , &nMuonCoordsS3                           );
  tree->SetBranchAddress("nMuonCoordsS4"                         , &nMuonCoordsS4                           );
  tree->SetBranchAddress("nMuonTracks"                           , &nMuonTracks                             );
  tree->SetBranchAddress("L0Global"                              , &L0Global                                );
  tree->SetBranchAddress("Hlt1Global"                            , &Hlt1Global                              );
  tree->SetBranchAddress("Hlt2Global"                            , &Hlt2Global                              );
}

// choose the output vars here
void Bc2Dmunu::Variables_Analysis::setOutputBranches(TTree *tree) {

  // defined by us in the base class ../core/include/Variables
  tree->Branch("itype"                                 , &itype                                   );
  tree->Branch("sqrts"                                 , &sqrts                                   );
  tree->Branch("evname"                                , &evname                                  );
  tree->Branch("year"                                  , &year                                    );

  // other variables we want to write out
  tree->Branch("bu_rejection_bdtoutput"                , &bu_rejection_bdtoutput                  );
  tree->Branch("comb_rejection_bdtoutput"              , &comb_rejection_bdtoutput                );

  // variables already in the tree that we want to still write out
  tree->Branch("nPV"                                   , &nPV                                     , "nPV/I"                                 );
  tree->Branch("B_plus_AllIP"                          , &B_plus_AllIP                            , "B_plus_AllIP[nPV]/F"                   );
  tree->Branch("B_plus_AllIPchi2"                      , &B_plus_AllIPchi2                        , "B_plus_AllIPchi2[nPV]/F"               );
  tree->Branch("B_plus_AllDIRA"                        , &B_plus_AllDIRA                          , "B_plus_AllDIRA[nPV]/F"                 );
  tree->Branch("B_plus_ENDVERTEX_X"                    , &B_plus_ENDVERTEX_X                      , "B_plus_ENDVERTEX_X/D"                  );
  tree->Branch("B_plus_ENDVERTEX_Y"                    , &B_plus_ENDVERTEX_Y                      , "B_plus_ENDVERTEX_Y/D"                  );
  tree->Branch("B_plus_ENDVERTEX_Z"                    , &B_plus_ENDVERTEX_Z                      , "B_plus_ENDVERTEX_Z/D"                  );
  tree->Branch("B_plus_ENDVERTEX_XERR"                 , &B_plus_ENDVERTEX_XERR                   , "B_plus_ENDVERTEX_XERR/D"               );
  tree->Branch("B_plus_ENDVERTEX_YERR"                 , &B_plus_ENDVERTEX_YERR                   , "B_plus_ENDVERTEX_YERR/D"               );
  tree->Branch("B_plus_ENDVERTEX_ZERR"                 , &B_plus_ENDVERTEX_ZERR                   , "B_plus_ENDVERTEX_ZERR/D"               );
  tree->Branch("B_plus_ENDVERTEX_CHI2"                 , &B_plus_ENDVERTEX_CHI2                   , "B_plus_ENDVERTEX_CHI2/D"               );
  tree->Branch("B_plus_ENDVERTEX_NDOF"                 , &B_plus_ENDVERTEX_NDOF                   , "B_plus_ENDVERTEX_NDOF/I"               );
  tree->Branch("B_plus_OWNPV_X"                        , &B_plus_OWNPV_X                          , "B_plus_OWNPV_X/D"                      );
  tree->Branch("B_plus_OWNPV_Y"                        , &B_plus_OWNPV_Y                          , "B_plus_OWNPV_Y/D"                      );
  tree->Branch("B_plus_OWNPV_Z"                        , &B_plus_OWNPV_Z                          , "B_plus_OWNPV_Z/D"                      );
  tree->Branch("B_plus_OWNPV_XERR"                     , &B_plus_OWNPV_XERR                       , "B_plus_OWNPV_XERR/D"                   );
  tree->Branch("B_plus_OWNPV_YERR"                     , &B_plus_OWNPV_YERR                       , "B_plus_OWNPV_YERR/D"                   );
  tree->Branch("B_plus_OWNPV_ZERR"                     , &B_plus_OWNPV_ZERR                       , "B_plus_OWNPV_ZERR/D"                   );
  tree->Branch("B_plus_OWNPV_CHI2"                     , &B_plus_OWNPV_CHI2                       , "B_plus_OWNPV_CHI2/D"                   );
  tree->Branch("B_plus_OWNPV_NDOF"                     , &B_plus_OWNPV_NDOF                       , "B_plus_OWNPV_NDOF/I"                   );
  tree->Branch("B_plus_IP_OWNPV"                       , &B_plus_IP_OWNPV                         , "B_plus_IP_OWNPV/D"                     );
  tree->Branch("B_plus_IPCHI2_OWNPV"                   , &B_plus_IPCHI2_OWNPV                     , "B_plus_IPCHI2_OWNPV/D"                 );
  tree->Branch("B_plus_FD_OWNPV"                       , &B_plus_FD_OWNPV                         , "B_plus_FD_OWNPV/D"                     );
  tree->Branch("B_plus_FDCHI2_OWNPV"                   , &B_plus_FDCHI2_OWNPV                     , "B_plus_FDCHI2_OWNPV/D"                 );
  tree->Branch("B_plus_DIRA_OWNPV"                     , &B_plus_DIRA_OWNPV                       , "B_plus_DIRA_OWNPV/D"                   );
  tree->Branch("B_plus_P"                              , &B_plus_P                                , "B_plus_P/D"                            );
  tree->Branch("B_plus_PT"                             , &B_plus_PT                               , "B_plus_PT/D"                           );
  tree->Branch("B_plus_PE"                             , &B_plus_PE                               , "B_plus_PE/D"                           );
  tree->Branch("B_plus_PX"                             , &B_plus_PX                               , "B_plus_PX/D"                           );
  tree->Branch("B_plus_PY"                             , &B_plus_PY                               , "B_plus_PY/D"                           );
  tree->Branch("B_plus_PZ"                             , &B_plus_PZ                               , "B_plus_PZ/D"                           );
  tree->Branch("B_plus_MM"                             , &B_plus_MM                               , "B_plus_MM/D"                           );
  tree->Branch("B_plus_MMERR"                          , &B_plus_MMERR                            , "B_plus_MMERR/D"                        );
  tree->Branch("B_plus_M"                              , &B_plus_M                                , "B_plus_M/D"                            );
  tree->Branch("B_plus_ID"                             , &B_plus_ID                               , "B_plus_ID/I"                           );
  tree->Branch("B_plus_BPVDIRA"                        , &B_plus_BPVDIRA                          , "B_plus_BPVDIRA/D"                      );
  tree->Branch("B_plus_BPVFDCHI2"                      , &B_plus_BPVFDCHI2                        , "B_plus_BPVFDCHI2/D"                    );
  tree->Branch("B_plus_BPVIPCHI2"                      , &B_plus_BPVIPCHI2                        , "B_plus_BPVIPCHI2/D"                    );
  tree->Branch("B_plus_CTAU"                           , &B_plus_CTAU                             , "B_plus_CTAU/D"                         );
  tree->Branch("B_plus_CTAUSIGNIFICANCE"               , &B_plus_CTAUSIGNIFICANCE                 , "B_plus_CTAUSIGNIFICANCE/D"             );
  tree->Branch("B_plus_ETA"                            , &B_plus_ETA                              , "B_plus_ETA/D"                          );
  tree->Branch("B_plus_LTIME"                          , &B_plus_LTIME                            , "B_plus_LTIME/D"                        );
  tree->Branch("B_plus_VCHI2"                          , &B_plus_VCHI2                            , "B_plus_VCHI2/D"                        );
  tree->Branch("B_plus_SV_X"                           , &B_plus_SV_X                             , "B_plus_SV_X/D"                         );
  tree->Branch("B_plus_SV_Y"                           , &B_plus_SV_Y                             , "B_plus_SV_Y/D"                         );
  tree->Branch("B_plus_SV_Z"                           , &B_plus_SV_Z                             , "B_plus_SV_Z/D"                         );
  tree->Branch("B_plus_SV_CHI2"                        , &B_plus_SV_CHI2                          , "B_plus_SV_CHI2/D"                      );
  tree->Branch("B_plus_SV_NDOF"                        , &B_plus_SV_NDOF                          , "B_plus_SV_NDOF/I"                      );
  tree->Branch("B_plus_PV_X"                           , &B_plus_PV_X                             , "B_plus_PV_X/D"                         );
  tree->Branch("B_plus_PV_Y"                           , &B_plus_PV_Y                             , "B_plus_PV_Y/D"                         );
  tree->Branch("B_plus_PV_Z"                           , &B_plus_PV_Z                             , "B_plus_PV_Z/D"                         );
  tree->Branch("B_plus_PV_CHI2"                        , &B_plus_PV_CHI2                          , "B_plus_PV_CHI2/D"                      );
  tree->Branch("B_plus_PV_NDOF"                        , &B_plus_PV_NDOF                          , "B_plus_PV_NDOF/I"                      );
  tree->Branch("B_plus_MCORR"                          , &B_plus_MCORR                            , "B_plus_MCORR/D"                        );
  tree->Branch("B_plus_Q2ERR_LOW"                      , &B_plus_Q2ERR_LOW                        , "B_plus_Q2ERR_LOW/D"                    );
  tree->Branch("B_plus_Q2ERR_HIGH"                     , &B_plus_Q2ERR_HIGH                       , "B_plus_Q2ERR_HIGH/D"                   );
  tree->Branch("B_plus_MCORRERR"                       , &B_plus_MCORRERR                         , "B_plus_MCORRERR/D"                     );
  tree->Branch("B_plus_MCORRFULLERR"                   , &B_plus_MCORRFULLERR                     , "B_plus_MCORRFULLERR/D"                 );
  tree->Branch("B_plus_Q2SOL1"                         , &B_plus_Q2SOL1                           , "B_plus_Q2SOL1/D"                       );
  tree->Branch("B_plus_Q2SOL2"                         , &B_plus_Q2SOL2                           , "B_plus_Q2SOL2/D"                       );
  tree->Branch("D0_AllIP"                              , &D0_AllIP                                , "D0_AllIP[nPV]/F"                       );
  tree->Branch("D0_AllIPchi2"                          , &D0_AllIPchi2                            , "D0_AllIPchi2[nPV]/F"                   );
  tree->Branch("D0_AllDIRA"                            , &D0_AllDIRA                              , "D0_AllDIRA[nPV]/F"                     );
  tree->Branch("D0_ENDVERTEX_X"                        , &D0_ENDVERTEX_X                          , "D0_ENDVERTEX_X/D"                      );
  tree->Branch("D0_ENDVERTEX_Y"                        , &D0_ENDVERTEX_Y                          , "D0_ENDVERTEX_Y/D"                      );
  tree->Branch("D0_ENDVERTEX_Z"                        , &D0_ENDVERTEX_Z                          , "D0_ENDVERTEX_Z/D"                      );
  tree->Branch("D0_ENDVERTEX_XERR"                     , &D0_ENDVERTEX_XERR                       , "D0_ENDVERTEX_XERR/D"                   );
  tree->Branch("D0_ENDVERTEX_YERR"                     , &D0_ENDVERTEX_YERR                       , "D0_ENDVERTEX_YERR/D"                   );
  tree->Branch("D0_ENDVERTEX_ZERR"                     , &D0_ENDVERTEX_ZERR                       , "D0_ENDVERTEX_ZERR/D"                   );
  tree->Branch("D0_ENDVERTEX_CHI2"                     , &D0_ENDVERTEX_CHI2                       , "D0_ENDVERTEX_CHI2/D"                   );
  tree->Branch("D0_ENDVERTEX_NDOF"                     , &D0_ENDVERTEX_NDOF                       , "D0_ENDVERTEX_NDOF/I"                   );
  tree->Branch("D0_OWNPV_X"                            , &D0_OWNPV_X                              , "D0_OWNPV_X/D"                          );
  tree->Branch("D0_OWNPV_Y"                            , &D0_OWNPV_Y                              , "D0_OWNPV_Y/D"                          );
  tree->Branch("D0_OWNPV_Z"                            , &D0_OWNPV_Z                              , "D0_OWNPV_Z/D"                          );
  tree->Branch("D0_OWNPV_XERR"                         , &D0_OWNPV_XERR                           , "D0_OWNPV_XERR/D"                       );
  tree->Branch("D0_OWNPV_YERR"                         , &D0_OWNPV_YERR                           , "D0_OWNPV_YERR/D"                       );
  tree->Branch("D0_OWNPV_ZERR"                         , &D0_OWNPV_ZERR                           , "D0_OWNPV_ZERR/D"                       );
  tree->Branch("D0_OWNPV_CHI2"                         , &D0_OWNPV_CHI2                           , "D0_OWNPV_CHI2/D"                       );
  tree->Branch("D0_OWNPV_NDOF"                         , &D0_OWNPV_NDOF                           , "D0_OWNPV_NDOF/I"                       );
  tree->Branch("D0_IP_OWNPV"                           , &D0_IP_OWNPV                             , "D0_IP_OWNPV/D"                         );
  tree->Branch("D0_IPCHI2_OWNPV"                       , &D0_IPCHI2_OWNPV                         , "D0_IPCHI2_OWNPV/D"                     );
  tree->Branch("D0_FD_OWNPV"                           , &D0_FD_OWNPV                             , "D0_FD_OWNPV/D"                         );
  tree->Branch("D0_FDCHI2_OWNPV"                       , &D0_FDCHI2_OWNPV                         , "D0_FDCHI2_OWNPV/D"                     );
  tree->Branch("D0_DIRA_OWNPV"                         , &D0_DIRA_OWNPV                           , "D0_DIRA_OWNPV/D"                       );
  tree->Branch("D0_ORIVX_X"                            , &D0_ORIVX_X                              , "D0_ORIVX_X/D"                          );
  tree->Branch("D0_ORIVX_Y"                            , &D0_ORIVX_Y                              , "D0_ORIVX_Y/D"                          );
  tree->Branch("D0_ORIVX_Z"                            , &D0_ORIVX_Z                              , "D0_ORIVX_Z/D"                          );
  tree->Branch("D0_ORIVX_XERR"                         , &D0_ORIVX_XERR                           , "D0_ORIVX_XERR/D"                       );
  tree->Branch("D0_ORIVX_YERR"                         , &D0_ORIVX_YERR                           , "D0_ORIVX_YERR/D"                       );
  tree->Branch("D0_ORIVX_ZERR"                         , &D0_ORIVX_ZERR                           , "D0_ORIVX_ZERR/D"                       );
  tree->Branch("D0_ORIVX_CHI2"                         , &D0_ORIVX_CHI2                           , "D0_ORIVX_CHI2/D"                       );
  tree->Branch("D0_ORIVX_NDOF"                         , &D0_ORIVX_NDOF                           , "D0_ORIVX_NDOF/I"                       );
  tree->Branch("D0_FD_ORIVX"                           , &D0_FD_ORIVX                             , "D0_FD_ORIVX/D"                         );
  tree->Branch("D0_FDCHI2_ORIVX"                       , &D0_FDCHI2_ORIVX                         , "D0_FDCHI2_ORIVX/D"                     );
  tree->Branch("D0_DIRA_ORIVX"                         , &D0_DIRA_ORIVX                           , "D0_DIRA_ORIVX/D"                       );
  tree->Branch("D0_P"                                  , &D0_P                                    , "D0_P/D"                                );
  tree->Branch("D0_PT"                                 , &D0_PT                                   , "D0_PT/D"                               );
  tree->Branch("D0_PE"                                 , &D0_PE                                   , "D0_PE/D"                               );
  tree->Branch("D0_PX"                                 , &D0_PX                                   , "D0_PX/D"                               );
  tree->Branch("D0_PY"                                 , &D0_PY                                   , "D0_PY/D"                               );
  tree->Branch("D0_PZ"                                 , &D0_PZ                                   , "D0_PZ/D"                               );
  tree->Branch("D0_MM"                                 , &D0_MM                                   , "D0_MM/D"                               );
  tree->Branch("D0_MMERR"                              , &D0_MMERR                                , "D0_MMERR/D"                            );
  tree->Branch("D0_M"                                  , &D0_M                                    , "D0_M/D"                                );
  tree->Branch("D0_ID"                                 , &D0_ID                                   , "D0_ID/I"                               );
  tree->Branch("D0_CTAU"                               , &D0_CTAU                                 , "D0_CTAU/D"                             );
  tree->Branch("D0_CTAUSIGNIFICANCE"                   , &D0_CTAUSIGNIFICANCE                     , "D0_CTAUSIGNIFICANCE/D"                 );
  tree->Branch("K_minus_MC12TuneV2_ProbNNe"            , &K_minus_MC12TuneV2_ProbNNe              , "K_minus_MC12TuneV2_ProbNNe/D"          );
  tree->Branch("K_minus_MC12TuneV2_ProbNNmu"           , &K_minus_MC12TuneV2_ProbNNmu             , "K_minus_MC12TuneV2_ProbNNmu/D"         );
  tree->Branch("K_minus_MC12TuneV2_ProbNNpi"           , &K_minus_MC12TuneV2_ProbNNpi             , "K_minus_MC12TuneV2_ProbNNpi/D"         );
  tree->Branch("K_minus_MC12TuneV2_ProbNNk"            , &K_minus_MC12TuneV2_ProbNNk              , "K_minus_MC12TuneV2_ProbNNk/D"          );
  tree->Branch("K_minus_MC12TuneV2_ProbNNp"            , &K_minus_MC12TuneV2_ProbNNp              , "K_minus_MC12TuneV2_ProbNNp/D"          );
  tree->Branch("K_minus_MC12TuneV2_ProbNNghost"        , &K_minus_MC12TuneV2_ProbNNghost          , "K_minus_MC12TuneV2_ProbNNghost/D"      );
  tree->Branch("K_minus_MC12TuneV3_ProbNNe"            , &K_minus_MC12TuneV3_ProbNNe              , "K_minus_MC12TuneV3_ProbNNe/D"          );
  tree->Branch("K_minus_MC12TuneV3_ProbNNmu"           , &K_minus_MC12TuneV3_ProbNNmu             , "K_minus_MC12TuneV3_ProbNNmu/D"         );
  tree->Branch("K_minus_MC12TuneV3_ProbNNpi"           , &K_minus_MC12TuneV3_ProbNNpi             , "K_minus_MC12TuneV3_ProbNNpi/D"         );
  tree->Branch("K_minus_MC12TuneV3_ProbNNk"            , &K_minus_MC12TuneV3_ProbNNk              , "K_minus_MC12TuneV3_ProbNNk/D"          );
  tree->Branch("K_minus_MC12TuneV3_ProbNNp"            , &K_minus_MC12TuneV3_ProbNNp              , "K_minus_MC12TuneV3_ProbNNp/D"          );
  tree->Branch("K_minus_MC12TuneV3_ProbNNghost"        , &K_minus_MC12TuneV3_ProbNNghost          , "K_minus_MC12TuneV3_ProbNNghost/D"      );
  tree->Branch("K_minus_AllIP"                         , &K_minus_AllIP                           , "K_minus_AllIP[nPV]/F"                  );
  tree->Branch("K_minus_AllIPchi2"                     , &K_minus_AllIPchi2                       , "K_minus_AllIPchi2[nPV]/F"              );
  tree->Branch("K_minus_OWNPV_X"                       , &K_minus_OWNPV_X                         , "K_minus_OWNPV_X/D"                     );
  tree->Branch("K_minus_OWNPV_Y"                       , &K_minus_OWNPV_Y                         , "K_minus_OWNPV_Y/D"                     );
  tree->Branch("K_minus_OWNPV_Z"                       , &K_minus_OWNPV_Z                         , "K_minus_OWNPV_Z/D"                     );
  tree->Branch("K_minus_OWNPV_XERR"                    , &K_minus_OWNPV_XERR                      , "K_minus_OWNPV_XERR/D"                  );
  tree->Branch("K_minus_OWNPV_YERR"                    , &K_minus_OWNPV_YERR                      , "K_minus_OWNPV_YERR/D"                  );
  tree->Branch("K_minus_OWNPV_ZERR"                    , &K_minus_OWNPV_ZERR                      , "K_minus_OWNPV_ZERR/D"                  );
  tree->Branch("K_minus_OWNPV_CHI2"                    , &K_minus_OWNPV_CHI2                      , "K_minus_OWNPV_CHI2/D"                  );
  tree->Branch("K_minus_OWNPV_NDOF"                    , &K_minus_OWNPV_NDOF                      , "K_minus_OWNPV_NDOF/I"                  );
  tree->Branch("K_minus_IP_OWNPV"                      , &K_minus_IP_OWNPV                        , "K_minus_IP_OWNPV/D"                    );
  tree->Branch("K_minus_IPCHI2_OWNPV"                  , &K_minus_IPCHI2_OWNPV                    , "K_minus_IPCHI2_OWNPV/D"                );
  tree->Branch("K_minus_ORIVX_X"                       , &K_minus_ORIVX_X                         , "K_minus_ORIVX_X/D"                     );
  tree->Branch("K_minus_ORIVX_Y"                       , &K_minus_ORIVX_Y                         , "K_minus_ORIVX_Y/D"                     );
  tree->Branch("K_minus_ORIVX_Z"                       , &K_minus_ORIVX_Z                         , "K_minus_ORIVX_Z/D"                     );
  tree->Branch("K_minus_ORIVX_XERR"                    , &K_minus_ORIVX_XERR                      , "K_minus_ORIVX_XERR/D"                  );
  tree->Branch("K_minus_ORIVX_YERR"                    , &K_minus_ORIVX_YERR                      , "K_minus_ORIVX_YERR/D"                  );
  tree->Branch("K_minus_ORIVX_ZERR"                    , &K_minus_ORIVX_ZERR                      , "K_minus_ORIVX_ZERR/D"                  );
  tree->Branch("K_minus_ORIVX_CHI2"                    , &K_minus_ORIVX_CHI2                      , "K_minus_ORIVX_CHI2/D"                  );
  tree->Branch("K_minus_ORIVX_NDOF"                    , &K_minus_ORIVX_NDOF                      , "K_minus_ORIVX_NDOF/I"                  );
  tree->Branch("K_minus_P"                             , &K_minus_P                               , "K_minus_P/D"                           );
  tree->Branch("K_minus_PT"                            , &K_minus_PT                              , "K_minus_PT/D"                          );
  tree->Branch("K_minus_PE"                            , &K_minus_PE                              , "K_minus_PE/D"                          );
  tree->Branch("K_minus_PX"                            , &K_minus_PX                              , "K_minus_PX/D"                          );
  tree->Branch("K_minus_PY"                            , &K_minus_PY                              , "K_minus_PY/D"                          );
  tree->Branch("K_minus_PZ"                            , &K_minus_PZ                              , "K_minus_PZ/D"                          );
  tree->Branch("K_minus_M"                             , &K_minus_M                               , "K_minus_M/D"                           );
  tree->Branch("K_minus_ID"                            , &K_minus_ID                              , "K_minus_ID/I"                          );
  tree->Branch("K_minus_PIDe"                          , &K_minus_PIDe                            , "K_minus_PIDe/D"                        );
  tree->Branch("K_minus_PIDmu"                         , &K_minus_PIDmu                           , "K_minus_PIDmu/D"                       );
  tree->Branch("K_minus_PIDK"                          , &K_minus_PIDK                            , "K_minus_PIDK/D"                        );
  tree->Branch("K_minus_PIDp"                          , &K_minus_PIDp                            , "K_minus_PIDp/D"                        );
  tree->Branch("K_minus_ProbNNe"                       , &K_minus_ProbNNe                         , "K_minus_ProbNNe/D"                     );
  tree->Branch("K_minus_ProbNNk"                       , &K_minus_ProbNNk                         , "K_minus_ProbNNk/D"                     );
  tree->Branch("K_minus_ProbNNp"                       , &K_minus_ProbNNp                         , "K_minus_ProbNNp/D"                     );
  tree->Branch("K_minus_ProbNNpi"                      , &K_minus_ProbNNpi                        , "K_minus_ProbNNpi/D"                    );
  tree->Branch("K_minus_ProbNNmu"                      , &K_minus_ProbNNmu                        , "K_minus_ProbNNmu/D"                    );
  tree->Branch("K_minus_ProbNNghost"                   , &K_minus_ProbNNghost                     , "K_minus_ProbNNghost/D"                 );
  tree->Branch("K_minus_hasMuon"                       , &K_minus_hasMuon                         , "K_minus_hasMuon/O"                     );
  tree->Branch("K_minus_isMuon"                        , &K_minus_isMuon                          , "K_minus_isMuon/O"                      );
  tree->Branch("K_minus_hasRich"                       , &K_minus_hasRich                         , "K_minus_hasRich/O"                     );
  tree->Branch("K_minus_hasCalo"                       , &K_minus_hasCalo                         , "K_minus_hasCalo/O"                     );
  tree->Branch("K_minus_TRACK_Type"                    , &K_minus_TRACK_Type                      , "K_minus_TRACK_Type/I"                  );
  tree->Branch("K_minus_TRACK_Key"                     , &K_minus_TRACK_Key                       , "K_minus_TRACK_Key/I"                   );
  tree->Branch("K_minus_TRACK_CHI2"                    , &K_minus_TRACK_CHI2                      , "K_minus_TRACK_CHI2/D"                  );
  tree->Branch("K_minus_TRACK_NDOF"                    , &K_minus_TRACK_NDOF                      , "K_minus_TRACK_NDOF/I"                  );
  tree->Branch("K_minus_TRACK_CHI2NDOF"                , &K_minus_TRACK_CHI2NDOF                  , "K_minus_TRACK_CHI2NDOF/D"              );
  tree->Branch("K_minus_TRACK_PCHI2"                   , &K_minus_TRACK_PCHI2                     , "K_minus_TRACK_PCHI2/D"                 );
  tree->Branch("K_minus_TRACK_VeloCHI2NDOF"            , &K_minus_TRACK_VeloCHI2NDOF              , "K_minus_TRACK_VeloCHI2NDOF/D"          );
  tree->Branch("K_minus_TRACK_TCHI2NDOF"               , &K_minus_TRACK_TCHI2NDOF                 , "K_minus_TRACK_TCHI2NDOF/D"             );
  tree->Branch("K_minus_TRACK_FirstMeasurementX"       , &K_minus_TRACK_FirstMeasurementX         , "K_minus_TRACK_FirstMeasurementX/D"     );
  tree->Branch("K_minus_TRACK_FirstMeasurementY"       , &K_minus_TRACK_FirstMeasurementY         , "K_minus_TRACK_FirstMeasurementY/D"     );
  tree->Branch("K_minus_TRACK_FirstMeasurementZ"       , &K_minus_TRACK_FirstMeasurementZ         , "K_minus_TRACK_FirstMeasurementZ/D"     );
  tree->Branch("K_minus_TRACK_MatchCHI2"               , &K_minus_TRACK_MatchCHI2                 , "K_minus_TRACK_MatchCHI2/D"             );
  tree->Branch("K_minus_TRACK_GhostProb"               , &K_minus_TRACK_GhostProb                 , "K_minus_TRACK_GhostProb/D"             );
  tree->Branch("K_minus_TRACK_CloneDist"               , &K_minus_TRACK_CloneDist                 , "K_minus_TRACK_CloneDist/D"             );
  tree->Branch("K_minus_TRACK_Likelihood"              , &K_minus_TRACK_Likelihood                , "K_minus_TRACK_Likelihood/D"            );
  tree->Branch("K_minus_ETA"                           , &K_minus_ETA                             , "K_minus_ETA/D"                         );
  tree->Branch("K_minus_MIPCHI2PV"                     , &K_minus_MIPCHI2PV                       , "K_minus_MIPCHI2PV/D"                   );
  tree->Branch("K_minus_TRCHI2DOF"                     , &K_minus_TRCHI2DOF                       , "K_minus_TRCHI2DOF/D"                   );
  tree->Branch("K_minus_TRGHOSTPROB"                   , &K_minus_TRGHOSTPROB                     , "K_minus_TRGHOSTPROB/D"                 );
  tree->Branch("Pi_plus_MC12TuneV2_ProbNNe"            , &Pi_plus_MC12TuneV2_ProbNNe              , "Pi_plus_MC12TuneV2_ProbNNe/D"          );
  tree->Branch("Pi_plus_MC12TuneV2_ProbNNmu"           , &Pi_plus_MC12TuneV2_ProbNNmu             , "Pi_plus_MC12TuneV2_ProbNNmu/D"         );
  tree->Branch("Pi_plus_MC12TuneV2_ProbNNpi"           , &Pi_plus_MC12TuneV2_ProbNNpi             , "Pi_plus_MC12TuneV2_ProbNNpi/D"         );
  tree->Branch("Pi_plus_MC12TuneV2_ProbNNk"            , &Pi_plus_MC12TuneV2_ProbNNk              , "Pi_plus_MC12TuneV2_ProbNNk/D"          );
  tree->Branch("Pi_plus_MC12TuneV2_ProbNNp"            , &Pi_plus_MC12TuneV2_ProbNNp              , "Pi_plus_MC12TuneV2_ProbNNp/D"          );
  tree->Branch("Pi_plus_MC12TuneV2_ProbNNghost"        , &Pi_plus_MC12TuneV2_ProbNNghost          , "Pi_plus_MC12TuneV2_ProbNNghost/D"      );
  tree->Branch("Pi_plus_MC12TuneV3_ProbNNe"            , &Pi_plus_MC12TuneV3_ProbNNe              , "Pi_plus_MC12TuneV3_ProbNNe/D"          );
  tree->Branch("Pi_plus_MC12TuneV3_ProbNNmu"           , &Pi_plus_MC12TuneV3_ProbNNmu             , "Pi_plus_MC12TuneV3_ProbNNmu/D"         );
  tree->Branch("Pi_plus_MC12TuneV3_ProbNNpi"           , &Pi_plus_MC12TuneV3_ProbNNpi             , "Pi_plus_MC12TuneV3_ProbNNpi/D"         );
  tree->Branch("Pi_plus_MC12TuneV3_ProbNNk"            , &Pi_plus_MC12TuneV3_ProbNNk              , "Pi_plus_MC12TuneV3_ProbNNk/D"          );
  tree->Branch("Pi_plus_MC12TuneV3_ProbNNp"            , &Pi_plus_MC12TuneV3_ProbNNp              , "Pi_plus_MC12TuneV3_ProbNNp/D"          );
  tree->Branch("Pi_plus_MC12TuneV3_ProbNNghost"        , &Pi_plus_MC12TuneV3_ProbNNghost          , "Pi_plus_MC12TuneV3_ProbNNghost/D"      );
  tree->Branch("Pi_plus_AllIP"                         , &Pi_plus_AllIP                           , "Pi_plus_AllIP[nPV]/F"                  );
  tree->Branch("Pi_plus_AllIPchi2"                     , &Pi_plus_AllIPchi2                       , "Pi_plus_AllIPchi2[nPV]/F"              );
  tree->Branch("Pi_plus_OWNPV_X"                       , &Pi_plus_OWNPV_X                         , "Pi_plus_OWNPV_X/D"                     );
  tree->Branch("Pi_plus_OWNPV_Y"                       , &Pi_plus_OWNPV_Y                         , "Pi_plus_OWNPV_Y/D"                     );
  tree->Branch("Pi_plus_OWNPV_Z"                       , &Pi_plus_OWNPV_Z                         , "Pi_plus_OWNPV_Z/D"                     );
  tree->Branch("Pi_plus_OWNPV_XERR"                    , &Pi_plus_OWNPV_XERR                      , "Pi_plus_OWNPV_XERR/D"                  );
  tree->Branch("Pi_plus_OWNPV_YERR"                    , &Pi_plus_OWNPV_YERR                      , "Pi_plus_OWNPV_YERR/D"                  );
  tree->Branch("Pi_plus_OWNPV_ZERR"                    , &Pi_plus_OWNPV_ZERR                      , "Pi_plus_OWNPV_ZERR/D"                  );
  tree->Branch("Pi_plus_OWNPV_CHI2"                    , &Pi_plus_OWNPV_CHI2                      , "Pi_plus_OWNPV_CHI2/D"                  );
  tree->Branch("Pi_plus_OWNPV_NDOF"                    , &Pi_plus_OWNPV_NDOF                      , "Pi_plus_OWNPV_NDOF/I"                  );
  tree->Branch("Pi_plus_IP_OWNPV"                      , &Pi_plus_IP_OWNPV                        , "Pi_plus_IP_OWNPV/D"                    );
  tree->Branch("Pi_plus_IPCHI2_OWNPV"                  , &Pi_plus_IPCHI2_OWNPV                    , "Pi_plus_IPCHI2_OWNPV/D"                );
  tree->Branch("Pi_plus_ORIVX_X"                       , &Pi_plus_ORIVX_X                         , "Pi_plus_ORIVX_X/D"                     );
  tree->Branch("Pi_plus_ORIVX_Y"                       , &Pi_plus_ORIVX_Y                         , "Pi_plus_ORIVX_Y/D"                     );
  tree->Branch("Pi_plus_ORIVX_Z"                       , &Pi_plus_ORIVX_Z                         , "Pi_plus_ORIVX_Z/D"                     );
  tree->Branch("Pi_plus_ORIVX_XERR"                    , &Pi_plus_ORIVX_XERR                      , "Pi_plus_ORIVX_XERR/D"                  );
  tree->Branch("Pi_plus_ORIVX_YERR"                    , &Pi_plus_ORIVX_YERR                      , "Pi_plus_ORIVX_YERR/D"                  );
  tree->Branch("Pi_plus_ORIVX_ZERR"                    , &Pi_plus_ORIVX_ZERR                      , "Pi_plus_ORIVX_ZERR/D"                  );
  tree->Branch("Pi_plus_ORIVX_CHI2"                    , &Pi_plus_ORIVX_CHI2                      , "Pi_plus_ORIVX_CHI2/D"                  );
  tree->Branch("Pi_plus_ORIVX_NDOF"                    , &Pi_plus_ORIVX_NDOF                      , "Pi_plus_ORIVX_NDOF/I"                  );
  tree->Branch("Pi_plus_P"                             , &Pi_plus_P                               , "Pi_plus_P/D"                           );
  tree->Branch("Pi_plus_PT"                            , &Pi_plus_PT                              , "Pi_plus_PT/D"                          );
  tree->Branch("Pi_plus_PE"                            , &Pi_plus_PE                              , "Pi_plus_PE/D"                          );
  tree->Branch("Pi_plus_PX"                            , &Pi_plus_PX                              , "Pi_plus_PX/D"                          );
  tree->Branch("Pi_plus_PY"                            , &Pi_plus_PY                              , "Pi_plus_PY/D"                          );
  tree->Branch("Pi_plus_PZ"                            , &Pi_plus_PZ                              , "Pi_plus_PZ/D"                          );
  tree->Branch("Pi_plus_M"                             , &Pi_plus_M                               , "Pi_plus_M/D"                           );
  tree->Branch("Pi_plus_ID"                            , &Pi_plus_ID                              , "Pi_plus_ID/I"                          );
  tree->Branch("Pi_plus_PIDe"                          , &Pi_plus_PIDe                            , "Pi_plus_PIDe/D"                        );
  tree->Branch("Pi_plus_PIDmu"                         , &Pi_plus_PIDmu                           , "Pi_plus_PIDmu/D"                       );
  tree->Branch("Pi_plus_PIDK"                          , &Pi_plus_PIDK                            , "Pi_plus_PIDK/D"                        );
  tree->Branch("Pi_plus_PIDp"                          , &Pi_plus_PIDp                            , "Pi_plus_PIDp/D"                        );
  tree->Branch("Pi_plus_ProbNNe"                       , &Pi_plus_ProbNNe                         , "Pi_plus_ProbNNe/D"                     );
  tree->Branch("Pi_plus_ProbNNk"                       , &Pi_plus_ProbNNk                         , "Pi_plus_ProbNNk/D"                     );
  tree->Branch("Pi_plus_ProbNNp"                       , &Pi_plus_ProbNNp                         , "Pi_plus_ProbNNp/D"                     );
  tree->Branch("Pi_plus_ProbNNpi"                      , &Pi_plus_ProbNNpi                        , "Pi_plus_ProbNNpi/D"                    );
  tree->Branch("Pi_plus_ProbNNmu"                      , &Pi_plus_ProbNNmu                        , "Pi_plus_ProbNNmu/D"                    );
  tree->Branch("Pi_plus_ProbNNghost"                   , &Pi_plus_ProbNNghost                     , "Pi_plus_ProbNNghost/D"                 );
  tree->Branch("Pi_plus_hasMuon"                       , &Pi_plus_hasMuon                         , "Pi_plus_hasMuon/O"                     );
  tree->Branch("Pi_plus_isMuon"                        , &Pi_plus_isMuon                          , "Pi_plus_isMuon/O"                      );
  tree->Branch("Pi_plus_hasRich"                       , &Pi_plus_hasRich                         , "Pi_plus_hasRich/O"                     );
  tree->Branch("Pi_plus_hasCalo"                       , &Pi_plus_hasCalo                         , "Pi_plus_hasCalo/O"                     );
  tree->Branch("Pi_plus_TRACK_Type"                    , &Pi_plus_TRACK_Type                      , "Pi_plus_TRACK_Type/I"                  );
  tree->Branch("Pi_plus_TRACK_Key"                     , &Pi_plus_TRACK_Key                       , "Pi_plus_TRACK_Key/I"                   );
  tree->Branch("Pi_plus_TRACK_CHI2"                    , &Pi_plus_TRACK_CHI2                      , "Pi_plus_TRACK_CHI2/D"                  );
  tree->Branch("Pi_plus_TRACK_NDOF"                    , &Pi_plus_TRACK_NDOF                      , "Pi_plus_TRACK_NDOF/I"                  );
  tree->Branch("Pi_plus_TRACK_CHI2NDOF"                , &Pi_plus_TRACK_CHI2NDOF                  , "Pi_plus_TRACK_CHI2NDOF/D"              );
  tree->Branch("Pi_plus_TRACK_PCHI2"                   , &Pi_plus_TRACK_PCHI2                     , "Pi_plus_TRACK_PCHI2/D"                 );
  tree->Branch("Pi_plus_TRACK_VeloCHI2NDOF"            , &Pi_plus_TRACK_VeloCHI2NDOF              , "Pi_plus_TRACK_VeloCHI2NDOF/D"          );
  tree->Branch("Pi_plus_TRACK_TCHI2NDOF"               , &Pi_plus_TRACK_TCHI2NDOF                 , "Pi_plus_TRACK_TCHI2NDOF/D"             );
  tree->Branch("Pi_plus_TRACK_FirstMeasurementX"       , &Pi_plus_TRACK_FirstMeasurementX         , "Pi_plus_TRACK_FirstMeasurementX/D"     );
  tree->Branch("Pi_plus_TRACK_FirstMeasurementY"       , &Pi_plus_TRACK_FirstMeasurementY         , "Pi_plus_TRACK_FirstMeasurementY/D"     );
  tree->Branch("Pi_plus_TRACK_FirstMeasurementZ"       , &Pi_plus_TRACK_FirstMeasurementZ         , "Pi_plus_TRACK_FirstMeasurementZ/D"     );
  tree->Branch("Pi_plus_TRACK_MatchCHI2"               , &Pi_plus_TRACK_MatchCHI2                 , "Pi_plus_TRACK_MatchCHI2/D"             );
  tree->Branch("Pi_plus_TRACK_GhostProb"               , &Pi_plus_TRACK_GhostProb                 , "Pi_plus_TRACK_GhostProb/D"             );
  tree->Branch("Pi_plus_TRACK_CloneDist"               , &Pi_plus_TRACK_CloneDist                 , "Pi_plus_TRACK_CloneDist/D"             );
  tree->Branch("Pi_plus_TRACK_Likelihood"              , &Pi_plus_TRACK_Likelihood                , "Pi_plus_TRACK_Likelihood/D"            );
  tree->Branch("Pi_plus_ETA"                           , &Pi_plus_ETA                             , "Pi_plus_ETA/D"                         );
  tree->Branch("Pi_plus_MIPCHI2PV"                     , &Pi_plus_MIPCHI2PV                       , "Pi_plus_MIPCHI2PV/D"                   );
  tree->Branch("Pi_plus_TRCHI2DOF"                     , &Pi_plus_TRCHI2DOF                       , "Pi_plus_TRCHI2DOF/D"                   );
  tree->Branch("Pi_plus_TRGHOSTPROB"                   , &Pi_plus_TRGHOSTPROB                     , "Pi_plus_TRGHOSTPROB/D"                 );
  tree->Branch("Mu_plus_MC12TuneV2_ProbNNe"            , &Mu_plus_MC12TuneV2_ProbNNe              , "Mu_plus_MC12TuneV2_ProbNNe/D"          );
  tree->Branch("Mu_plus_MC12TuneV2_ProbNNmu"           , &Mu_plus_MC12TuneV2_ProbNNmu             , "Mu_plus_MC12TuneV2_ProbNNmu/D"         );
  tree->Branch("Mu_plus_MC12TuneV2_ProbNNpi"           , &Mu_plus_MC12TuneV2_ProbNNpi             , "Mu_plus_MC12TuneV2_ProbNNpi/D"         );
  tree->Branch("Mu_plus_MC12TuneV2_ProbNNk"            , &Mu_plus_MC12TuneV2_ProbNNk              , "Mu_plus_MC12TuneV2_ProbNNk/D"          );
  tree->Branch("Mu_plus_MC12TuneV2_ProbNNp"            , &Mu_plus_MC12TuneV2_ProbNNp              , "Mu_plus_MC12TuneV2_ProbNNp/D"          );
  tree->Branch("Mu_plus_MC12TuneV2_ProbNNghost"        , &Mu_plus_MC12TuneV2_ProbNNghost          , "Mu_plus_MC12TuneV2_ProbNNghost/D"      );
  tree->Branch("Mu_plus_MC12TuneV3_ProbNNe"            , &Mu_plus_MC12TuneV3_ProbNNe              , "Mu_plus_MC12TuneV3_ProbNNe/D"          );
  tree->Branch("Mu_plus_MC12TuneV3_ProbNNmu"           , &Mu_plus_MC12TuneV3_ProbNNmu             , "Mu_plus_MC12TuneV3_ProbNNmu/D"         );
  tree->Branch("Mu_plus_MC12TuneV3_ProbNNpi"           , &Mu_plus_MC12TuneV3_ProbNNpi             , "Mu_plus_MC12TuneV3_ProbNNpi/D"         );
  tree->Branch("Mu_plus_MC12TuneV3_ProbNNk"            , &Mu_plus_MC12TuneV3_ProbNNk              , "Mu_plus_MC12TuneV3_ProbNNk/D"          );
  tree->Branch("Mu_plus_MC12TuneV3_ProbNNp"            , &Mu_plus_MC12TuneV3_ProbNNp              , "Mu_plus_MC12TuneV3_ProbNNp/D"          );
  tree->Branch("Mu_plus_MC12TuneV3_ProbNNghost"        , &Mu_plus_MC12TuneV3_ProbNNghost          , "Mu_plus_MC12TuneV3_ProbNNghost/D"      );
  tree->Branch("Mu_plus_AllIP"                         , &Mu_plus_AllIP                           , "Mu_plus_AllIP[nPV]/F"                  );
  tree->Branch("Mu_plus_AllIPchi2"                     , &Mu_plus_AllIPchi2                       , "Mu_plus_AllIPchi2[nPV]/F"              );
  tree->Branch("Mu_plus_OWNPV_X"                       , &Mu_plus_OWNPV_X                         , "Mu_plus_OWNPV_X/D"                     );
  tree->Branch("Mu_plus_OWNPV_Y"                       , &Mu_plus_OWNPV_Y                         , "Mu_plus_OWNPV_Y/D"                     );
  tree->Branch("Mu_plus_OWNPV_Z"                       , &Mu_plus_OWNPV_Z                         , "Mu_plus_OWNPV_Z/D"                     );
  tree->Branch("Mu_plus_OWNPV_XERR"                    , &Mu_plus_OWNPV_XERR                      , "Mu_plus_OWNPV_XERR/D"                  );
  tree->Branch("Mu_plus_OWNPV_YERR"                    , &Mu_plus_OWNPV_YERR                      , "Mu_plus_OWNPV_YERR/D"                  );
  tree->Branch("Mu_plus_OWNPV_ZERR"                    , &Mu_plus_OWNPV_ZERR                      , "Mu_plus_OWNPV_ZERR/D"                  );
  tree->Branch("Mu_plus_OWNPV_CHI2"                    , &Mu_plus_OWNPV_CHI2                      , "Mu_plus_OWNPV_CHI2/D"                  );
  tree->Branch("Mu_plus_OWNPV_NDOF"                    , &Mu_plus_OWNPV_NDOF                      , "Mu_plus_OWNPV_NDOF/I"                  );
  tree->Branch("Mu_plus_IP_OWNPV"                      , &Mu_plus_IP_OWNPV                        , "Mu_plus_IP_OWNPV/D"                    );
  tree->Branch("Mu_plus_IPCHI2_OWNPV"                  , &Mu_plus_IPCHI2_OWNPV                    , "Mu_plus_IPCHI2_OWNPV/D"                );
  tree->Branch("Mu_plus_ORIVX_X"                       , &Mu_plus_ORIVX_X                         , "Mu_plus_ORIVX_X/D"                     );
  tree->Branch("Mu_plus_ORIVX_Y"                       , &Mu_plus_ORIVX_Y                         , "Mu_plus_ORIVX_Y/D"                     );
  tree->Branch("Mu_plus_ORIVX_Z"                       , &Mu_plus_ORIVX_Z                         , "Mu_plus_ORIVX_Z/D"                     );
  tree->Branch("Mu_plus_ORIVX_XERR"                    , &Mu_plus_ORIVX_XERR                      , "Mu_plus_ORIVX_XERR/D"                  );
  tree->Branch("Mu_plus_ORIVX_YERR"                    , &Mu_plus_ORIVX_YERR                      , "Mu_plus_ORIVX_YERR/D"                  );
  tree->Branch("Mu_plus_ORIVX_ZERR"                    , &Mu_plus_ORIVX_ZERR                      , "Mu_plus_ORIVX_ZERR/D"                  );
  tree->Branch("Mu_plus_ORIVX_CHI2"                    , &Mu_plus_ORIVX_CHI2                      , "Mu_plus_ORIVX_CHI2/D"                  );
  tree->Branch("Mu_plus_ORIVX_NDOF"                    , &Mu_plus_ORIVX_NDOF                      , "Mu_plus_ORIVX_NDOF/I"                  );
  tree->Branch("Mu_plus_P"                             , &Mu_plus_P                               , "Mu_plus_P/D"                           );
  tree->Branch("Mu_plus_PT"                            , &Mu_plus_PT                              , "Mu_plus_PT/D"                          );
  tree->Branch("Mu_plus_PE"                            , &Mu_plus_PE                              , "Mu_plus_PE/D"                          );
  tree->Branch("Mu_plus_PX"                            , &Mu_plus_PX                              , "Mu_plus_PX/D"                          );
  tree->Branch("Mu_plus_PY"                            , &Mu_plus_PY                              , "Mu_plus_PY/D"                          );
  tree->Branch("Mu_plus_PZ"                            , &Mu_plus_PZ                              , "Mu_plus_PZ/D"                          );
  tree->Branch("Mu_plus_M"                             , &Mu_plus_M                               , "Mu_plus_M/D"                           );
  tree->Branch("Mu_plus_ID"                            , &Mu_plus_ID                              , "Mu_plus_ID/I"                          );
  tree->Branch("Mu_plus_PIDe"                          , &Mu_plus_PIDe                            , "Mu_plus_PIDe/D"                        );
  tree->Branch("Mu_plus_PIDmu"                         , &Mu_plus_PIDmu                           , "Mu_plus_PIDmu/D"                       );
  tree->Branch("Mu_plus_PIDK"                          , &Mu_plus_PIDK                            , "Mu_plus_PIDK/D"                        );
  tree->Branch("Mu_plus_PIDp"                          , &Mu_plus_PIDp                            , "Mu_plus_PIDp/D"                        );
  tree->Branch("Mu_plus_ProbNNe"                       , &Mu_plus_ProbNNe                         , "Mu_plus_ProbNNe/D"                     );
  tree->Branch("Mu_plus_ProbNNk"                       , &Mu_plus_ProbNNk                         , "Mu_plus_ProbNNk/D"                     );
  tree->Branch("Mu_plus_ProbNNp"                       , &Mu_plus_ProbNNp                         , "Mu_plus_ProbNNp/D"                     );
  tree->Branch("Mu_plus_ProbNNpi"                      , &Mu_plus_ProbNNpi                        , "Mu_plus_ProbNNpi/D"                    );
  tree->Branch("Mu_plus_ProbNNmu"                      , &Mu_plus_ProbNNmu                        , "Mu_plus_ProbNNmu/D"                    );
  tree->Branch("Mu_plus_ProbNNghost"                   , &Mu_plus_ProbNNghost                     , "Mu_plus_ProbNNghost/D"                 );
  tree->Branch("Mu_plus_hasMuon"                       , &Mu_plus_hasMuon                         , "Mu_plus_hasMuon/O"                     );
  tree->Branch("Mu_plus_isMuon"                        , &Mu_plus_isMuon                          , "Mu_plus_isMuon/O"                      );
  tree->Branch("Mu_plus_hasRich"                       , &Mu_plus_hasRich                         , "Mu_plus_hasRich/O"                     );
  tree->Branch("Mu_plus_hasCalo"                       , &Mu_plus_hasCalo                         , "Mu_plus_hasCalo/O"                     );
  tree->Branch("Mu_plus_TRACK_Type"                    , &Mu_plus_TRACK_Type                      , "Mu_plus_TRACK_Type/I"                  );
  tree->Branch("Mu_plus_TRACK_Key"                     , &Mu_plus_TRACK_Key                       , "Mu_plus_TRACK_Key/I"                   );
  tree->Branch("Mu_plus_TRACK_CHI2"                    , &Mu_plus_TRACK_CHI2                      , "Mu_plus_TRACK_CHI2/D"                  );
  tree->Branch("Mu_plus_TRACK_NDOF"                    , &Mu_plus_TRACK_NDOF                      , "Mu_plus_TRACK_NDOF/I"                  );
  tree->Branch("Mu_plus_TRACK_CHI2NDOF"                , &Mu_plus_TRACK_CHI2NDOF                  , "Mu_plus_TRACK_CHI2NDOF/D"              );
  tree->Branch("Mu_plus_TRACK_PCHI2"                   , &Mu_plus_TRACK_PCHI2                     , "Mu_plus_TRACK_PCHI2/D"                 );
  tree->Branch("Mu_plus_TRACK_VeloCHI2NDOF"            , &Mu_plus_TRACK_VeloCHI2NDOF              , "Mu_plus_TRACK_VeloCHI2NDOF/D"          );
  tree->Branch("Mu_plus_TRACK_TCHI2NDOF"               , &Mu_plus_TRACK_TCHI2NDOF                 , "Mu_plus_TRACK_TCHI2NDOF/D"             );
  tree->Branch("Mu_plus_TRACK_FirstMeasurementX"       , &Mu_plus_TRACK_FirstMeasurementX         , "Mu_plus_TRACK_FirstMeasurementX/D"     );
  tree->Branch("Mu_plus_TRACK_FirstMeasurementY"       , &Mu_plus_TRACK_FirstMeasurementY         , "Mu_plus_TRACK_FirstMeasurementY/D"     );
  tree->Branch("Mu_plus_TRACK_FirstMeasurementZ"       , &Mu_plus_TRACK_FirstMeasurementZ         , "Mu_plus_TRACK_FirstMeasurementZ/D"     );
  tree->Branch("Mu_plus_TRACK_MatchCHI2"               , &Mu_plus_TRACK_MatchCHI2                 , "Mu_plus_TRACK_MatchCHI2/D"             );
  tree->Branch("Mu_plus_TRACK_GhostProb"               , &Mu_plus_TRACK_GhostProb                 , "Mu_plus_TRACK_GhostProb/D"             );
  tree->Branch("Mu_plus_TRACK_CloneDist"               , &Mu_plus_TRACK_CloneDist                 , "Mu_plus_TRACK_CloneDist/D"             );
  tree->Branch("Mu_plus_TRACK_Likelihood"              , &Mu_plus_TRACK_Likelihood                , "Mu_plus_TRACK_Likelihood/D"            );
  tree->Branch("Mu_plus_ETA"                           , &Mu_plus_ETA                             , "Mu_plus_ETA/D"                         );
  tree->Branch("Mu_plus_MIPCHI2PV"                     , &Mu_plus_MIPCHI2PV                       , "Mu_plus_MIPCHI2PV/D"                   );
  tree->Branch("Mu_plus_TRCHI2DOF"                     , &Mu_plus_TRCHI2DOF                       , "Mu_plus_TRCHI2DOF/D"                   );
  tree->Branch("Mu_plus_TRGHOSTPROB"                   , &Mu_plus_TRGHOSTPROB                     , "Mu_plus_TRGHOSTPROB/D"                 );
  tree->Branch("nCandidate"                            , &nCandidate                              , "nCandidate/i"                          );
  tree->Branch("totCandidates"                         , &totCandidates                           , "totCandidates/l"                       );
  tree->Branch("EventInSequence"                       , &EventInSequence                         , "EventInSequence/l"                     );
  tree->Branch("runNumber"                             , &runNumber                               , "runNumber/i"                           );
  tree->Branch("eventNumber"                           , &eventNumber                             , "eventNumber/l"                         );
  tree->Branch("BCID"                                  , &BCID                                    , "BCID/i"                                );
  tree->Branch("BCType"                                , &BCType                                  , "BCType/I"                              );
  tree->Branch("OdinTCK"                               , &OdinTCK                                 , "OdinTCK/i"                             );
  tree->Branch("L0DUTCK"                               , &L0DUTCK                                 , "L0DUTCK/i"                             );
  tree->Branch("HLT1TCK"                               , &HLT1TCK                                 , "HLT1TCK/i"                             );
  tree->Branch("HLT2TCK"                               , &HLT2TCK                                 , "HLT2TCK/i"                             );
  tree->Branch("GpsTime"                               , &GpsTime                                 , "GpsTime/l"                             );
  tree->Branch("Polarity"                              , &Polarity                                , "Polarity/S"                            );
  tree->Branch("PVX"                                   , &PVX                                     , "PVX[nPV]/F"                            );
  tree->Branch("PVY"                                   , &PVY                                     , "PVY[nPV]/F"                            );
  tree->Branch("PVZ"                                   , &PVZ                                     , "PVZ[nPV]/F"                            );
  tree->Branch("PVXERR"                                , &PVXERR                                  , "PVXERR[nPV]/F"                         );
  tree->Branch("PVYERR"                                , &PVYERR                                  , "PVYERR[nPV]/F"                         );
  tree->Branch("PVZERR"                                , &PVZERR                                  , "PVZERR[nPV]/F"                         );
  tree->Branch("PVCHI2"                                , &PVCHI2                                  , "PVCHI2[nPV]/F"                         );
  tree->Branch("PVNDOF"                                , &PVNDOF                                  , "PVNDOF[nPV]/F"                         );
  tree->Branch("PVNTRACKS"                             , &PVNTRACKS                               , "PVNTRACKS[nPV]/F"                      );
  tree->Branch("nPVs"                                  , &nPVs                                    , "nPVs/I"                                );
  tree->Branch("nTracks"                               , &nTracks                                 , "nTracks/I"                             );
  tree->Branch("nLongTracks"                           , &nLongTracks                             , "nLongTracks/I"                         );
  tree->Branch("nDownstreamTracks"                     , &nDownstreamTracks                       , "nDownstreamTracks/I"                   );
  tree->Branch("nUpstreamTracks"                       , &nUpstreamTracks                         , "nUpstreamTracks/I"                     );
  tree->Branch("nVeloTracks"                           , &nVeloTracks                             , "nVeloTracks/I"                         );
  tree->Branch("nTTracks"                              , &nTTracks                                , "nTTracks/I"                            );
  tree->Branch("nBackTracks"                           , &nBackTracks                             , "nBackTracks/I"                         );
  tree->Branch("nRich1Hits"                            , &nRich1Hits                              , "nRich1Hits/I"                          );
  tree->Branch("nRich2Hits"                            , &nRich2Hits                              , "nRich2Hits/I"                          );
  tree->Branch("nVeloClusters"                         , &nVeloClusters                           , "nVeloClusters/I"                       );
  tree->Branch("nITClusters"                           , &nITClusters                             , "nITClusters/I"                         );
  tree->Branch("nTTClusters"                           , &nTTClusters                             , "nTTClusters/I"                         );
  tree->Branch("nOTClusters"                           , &nOTClusters                             , "nOTClusters/I"                         );
  tree->Branch("nSPDHits"                              , &nSPDHits                                , "nSPDHits/I"                            );
  tree->Branch("nMuonCoordsS0"                         , &nMuonCoordsS0                           , "nMuonCoordsS0/I"                       );
  tree->Branch("nMuonCoordsS1"                         , &nMuonCoordsS1                           , "nMuonCoordsS1/I"                       );
  tree->Branch("nMuonCoordsS2"                         , &nMuonCoordsS2                           , "nMuonCoordsS2/I"                       );
  tree->Branch("nMuonCoordsS3"                         , &nMuonCoordsS3                           , "nMuonCoordsS3/I"                       );
  tree->Branch("nMuonCoordsS4"                         , &nMuonCoordsS4                           , "nMuonCoordsS4/I"                       );
  tree->Branch("nMuonTracks"                           , &nMuonTracks                             , "nMuonTracks/I"                         );
  tree->Branch("L0Global"                              , &L0Global                                , "L0Global/I"                            );
  tree->Branch("Hlt1Global"                            , &Hlt1Global                              , "Hlt1Global/i"                          );
  tree->Branch("Hlt2Global"                            , &Hlt2Global                              , "Hlt2Global/i"                          );
}

